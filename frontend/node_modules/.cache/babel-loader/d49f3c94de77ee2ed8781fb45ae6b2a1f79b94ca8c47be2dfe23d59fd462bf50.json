{"ast":null,"code":"var _jsxFileName = \"D:\\\\38029\\\\Subtitle Sync\\\\UI\\\\frontend\\\\src\\\\components\\\\SubtitleGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Upload, Video, FileText, Download, RefreshCw, CheckCircle, XCircle, Clock, Settings, Play } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubtitleGenerator = ({\n  generatorApi,\n  onSubtitleGenerated,\n  showMessage\n}) => {\n  _s();\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [videoFile, setVideoFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [taskId, setTaskId] = useState(null);\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('base');\n  const [selectedFormat, setSelectedFormat] = useState('srt');\n  const [generatedFile, setGeneratedFile] = useState(null);\n  const [isServerAvailable, setIsServerAvailable] = useState(true);\n\n  // Check server availability and load models on component mount\n  useEffect(() => {\n    checkServerAndLoadModels();\n  }, []);\n  const checkServerAndLoadModels = async () => {\n    try {\n      await generatorApi.healthCheck();\n      const modelsData = await generatorApi.getAvailableModels();\n      setAvailableModels(modelsData.models || []);\n      setIsServerAvailable(true);\n    } catch (error) {\n      setIsServerAvailable(false);\n      showMessage('Subtitle Tools API server is not available. Please start it on port 8000.', 'error');\n    }\n  };\n  const handleVideoUpload = file => {\n    const extension = file.name.toLowerCase().split('.').pop();\n    if (['mp4', 'avi', 'mov', 'mkv', 'wmv', 'flv', 'webm'].includes(extension)) {\n      setVideoFile(file);\n      showMessage(`Video file selected for subtitle generation: ${file.name}`, 'success');\n    } else {\n      showMessage(`Unsupported video file type: ${file.name}`, 'error');\n    }\n  };\n  const uploadVideoFile = async () => {\n    if (!videoFile) {\n      showMessage('Please select a video file first', 'error');\n      return false;\n    }\n    try {\n      setUploadProgress(0);\n      const result = await generatorApi.uploadVideo(videoFile, progress => setUploadProgress(progress));\n      showMessage(`Video uploaded successfully: ${result.filename}`, 'success');\n      return true;\n    } catch (error) {\n      showMessage(`Failed to upload video: ${error.message}`, 'error');\n      return false;\n    }\n  };\n  const startGeneration = async () => {\n    if (!videoFile) {\n      showMessage('Please select a video file first', 'error');\n      return;\n    }\n    setIsGenerating(true);\n    setGenerationProgress(0);\n    setTaskStatus(null);\n    setGeneratedFile(null);\n    try {\n      // First upload the video\n      const uploadSuccess = await uploadVideoFile();\n      if (!uploadSuccess) {\n        setIsGenerating(false);\n        return;\n      }\n\n      // Start generation\n      const result = await generatorApi.startGeneration(videoFile.name, selectedFormat, selectedModel);\n      setTaskId(result.task_id);\n      showMessage(`Subtitle generation started using ${selectedModel} model`, 'info');\n\n      // Poll for status updates\n      pollGenerationStatus(result.task_id);\n    } catch (error) {\n      showMessage(`Failed to start generation: ${error.message}`, 'error');\n      setIsGenerating(false);\n    }\n  };\n  const pollGenerationStatus = async taskId => {\n    try {\n      const status = await generatorApi.pollTaskUntilComplete(taskId, 3000);\n      if (status.status === 'completed') {\n        const result = await generatorApi.getTaskResult(taskId);\n        setGeneratedFile(result.output_file);\n        showMessage(`Subtitles generated successfully! ${result.segments_count} segments created.`, 'success');\n\n        // Notify parent component about the generated subtitle\n        if (onSubtitleGenerated) {\n          onSubtitleGenerated(result.output_file, result);\n        }\n      } else if (status.status === 'failed') {\n        showMessage(`Generation failed: ${status.message}`, 'error');\n      }\n      setTaskStatus(status);\n      setIsGenerating(false);\n    } catch (error) {\n      showMessage(`Generation failed: ${error.message}`, 'error');\n      setIsGenerating(false);\n    }\n  };\n  const downloadGeneratedFile = async () => {\n    if (!generatedFile) return;\n    try {\n      const blob = await generatorApi.downloadFile(generatedFile);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.style.display = 'none';\n      a.href = url;\n      a.download = generatedFile;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n      showMessage(`Downloaded: ${generatedFile}`, 'success');\n    } catch (error) {\n      showMessage(`Failed to download file: ${error.message}`, 'error');\n    }\n  };\n  if (!isServerAvailable) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        backgroundColor: '#fff3cd',\n        borderLeft: '4px solid #ffc107'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(XCircle, {\n          style: {\n            color: '#856404',\n            marginRight: '10px'\n          },\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#856404',\n            margin: 0\n          },\n          children: \"Generator Service Unavailable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#856404',\n          marginBottom: '15px'\n        },\n        children: \"The Subtitle Tools API server is not running. To use subtitle generation features:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          padding: '15px',\n          borderRadius: '8px',\n          fontFamily: 'monospace',\n          fontSize: '0.9em',\n          color: '#856404',\n          marginBottom: '15px'\n        },\n        children: \"python subtitle_tools_api.py\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkServerAndLoadModels,\n        className: \"btn\",\n        style: {\n          background: '#ffc107',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Retry Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Play, {\n        style: {\n          color: '#4CAF50',\n          marginRight: '12px'\n        },\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#333',\n          margin: 0,\n          fontSize: '1.3em'\n        },\n        children: \"Generate Subtitles from Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '25px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          fontWeight: '600',\n          color: '#333',\n          marginBottom: '10px'\n        },\n        children: \"Select Video File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-area\",\n        style: {\n          border: videoFile ? '2px dashed #4CAF50' : '2px dashed #ccc',\n          backgroundColor: videoFile ? 'rgba(76, 175, 80, 0.05)' : 'transparent'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".mp4,.avi,.mov,.mkv,.wmv,.flv,.webm\",\n          onChange: e => e.target.files[0] && handleVideoUpload(e.target.files[0]),\n          className: \"file-input\",\n          id: \"video-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"video-upload\",\n          style: {\n            cursor: 'pointer',\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: /*#__PURE__*/_jsxDEV(Video, {\n              size: 48\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text\",\n            children: videoFile ? videoFile.name : 'Click to select video file or drag and drop'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-subtext\",\n            children: \"Supports: MP4, AVI, MOV, MKV, WMV, FLV, WebM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), uploadProgress > 0 && uploadProgress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          style: {\n            textAlign: 'left',\n            marginBottom: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Uploading... \", uploadProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            fontWeight: '600',\n            color: '#333',\n            marginBottom: '8px'\n          },\n          children: \"Whisper Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedModel,\n          onChange: e => setSelectedModel(e.target.value),\n          disabled: isGenerating,\n          style: {\n            width: '100%',\n            padding: '10px 12px',\n            border: '2px solid #ddd',\n            borderRadius: '8px',\n            fontSize: '0.95em',\n            backgroundColor: isGenerating ? '#f5f5f5' : 'white',\n            cursor: isGenerating ? 'not-allowed' : 'pointer'\n          },\n          children: availableModels.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model.name,\n            children: [model.name, \" - \", model.description]\n          }, model.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            fontWeight: '600',\n            color: '#333',\n            marginBottom: '8px'\n          },\n          children: \"Output Format\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedFormat,\n          onChange: e => setSelectedFormat(e.target.value),\n          disabled: isGenerating,\n          style: {\n            width: '100%',\n            padding: '10px 12px',\n            border: '2px solid #ddd',\n            borderRadius: '8px',\n            fontSize: '0.95em',\n            backgroundColor: isGenerating ? '#f5f5f5' : 'white',\n            cursor: isGenerating ? 'not-allowed' : 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"srt\",\n            children: \"SRT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vtt\",\n            children: \"VTT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGeneration,\n      disabled: !videoFile || isGenerating,\n      className: \"btn\",\n      style: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '10px',\n        padding: '15px 20px',\n        backgroundColor: !videoFile || isGenerating ? '#ccc' : '#4CAF50',\n        cursor: !videoFile || isGenerating ? 'not-allowed' : 'pointer',\n        opacity: !videoFile || isGenerating ? 0.6 : 1,\n        marginTop: '20px'\n      },\n      children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"loading-spinner\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Generating Subtitles...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Play, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Generate Subtitles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), taskStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-item\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '10px'\n        },\n        children: [taskStatus.status === 'completed' ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          style: {\n            color: '#4CAF50',\n            marginRight: '8px'\n          },\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this) : taskStatus.status === 'failed' ? /*#__PURE__*/_jsxDEV(XCircle, {\n          style: {\n            color: '#f44336',\n            marginRight: '8px'\n          },\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Clock, {\n          style: {\n            color: '#ff9800',\n            marginRight: '8px'\n          },\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: '600',\n            textTransform: 'capitalize'\n          },\n          children: taskStatus.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#666',\n          fontSize: '0.95em',\n          marginBottom: '10px'\n        },\n        children: taskStatus.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), taskStatus.progress && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          style: {\n            marginBottom: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Progress: \", taskStatus.progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${taskStatus.progress}%`,\n              background: 'linear-gradient(90deg, #4CAF50, #81C784)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), generatedFile && (taskStatus === null || taskStatus === void 0 ? void 0 : taskStatus.status) === 'completed' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-item\",\n      style: {\n        marginTop: '20px',\n        backgroundColor: '#d4edda',\n        borderLeft: '4px solid #4CAF50'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            style: {\n              color: '#4CAF50',\n              marginRight: '8px'\n            },\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: '600',\n              color: '#155724'\n            },\n            children: [\"Generated: \", generatedFile]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadGeneratedFile,\n          className: \"btn btn-secondary\",\n          style: {\n            padding: '8px 12px',\n            fontSize: '0.9em',\n            display: 'flex',\n            alignItems: 'center',\n            gap: '6px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(SubtitleGenerator, \"IWXzJI49jZeNAKYrbmkvAWYwUBI=\");\n_c = SubtitleGenerator;\nexport default SubtitleGenerator;\nvar _c;\n$RefreshReg$(_c, \"SubtitleGenerator\");","map":{"version":3,"names":["React","useState","useEffect","Upload","Video","FileText","Download","RefreshCw","CheckCircle","XCircle","Clock","Settings","Play","jsxDEV","_jsxDEV","Fragment","_Fragment","SubtitleGenerator","generatorApi","onSubtitleGenerated","showMessage","_s","isGenerating","setIsGenerating","videoFile","setVideoFile","uploadProgress","setUploadProgress","generationProgress","setGenerationProgress","taskId","setTaskId","taskStatus","setTaskStatus","availableModels","setAvailableModels","selectedModel","setSelectedModel","selectedFormat","setSelectedFormat","generatedFile","setGeneratedFile","isServerAvailable","setIsServerAvailable","checkServerAndLoadModels","healthCheck","modelsData","getAvailableModels","models","error","handleVideoUpload","file","extension","name","toLowerCase","split","pop","includes","uploadVideoFile","result","uploadVideo","progress","filename","message","startGeneration","uploadSuccess","task_id","pollGenerationStatus","status","pollTaskUntilComplete","getTaskResult","output_file","segments_count","downloadGeneratedFile","blob","downloadFile","url","window","URL","createObjectURL","a","document","createElement","style","display","href","download","body","appendChild","click","revokeObjectURL","removeChild","className","backgroundColor","borderLeft","children","alignItems","marginBottom","color","marginRight","size","fileName","_jsxFileName","lineNumber","columnNumber","margin","padding","borderRadius","fontFamily","fontSize","onClick","background","gap","fontWeight","border","type","accept","onChange","e","target","files","id","htmlFor","cursor","textAlign","width","value","disabled","map","model","description","justifyContent","opacity","marginTop","textTransform","_c","$RefreshReg$"],"sources":["D:/38029/Subtitle Sync/UI/frontend/src/components/SubtitleGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Upload, Video, FileText, Download, RefreshCw, CheckCircle, XCircle, Clock, Settings, Play } from 'lucide-react';\r\n\r\nconst SubtitleGenerator = ({ \r\n  generatorApi, \r\n  onSubtitleGenerated, \r\n  showMessage \r\n}) => {\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [videoFile, setVideoFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [generationProgress, setGenerationProgress] = useState(0);\r\n  const [taskId, setTaskId] = useState(null);\r\n  const [taskStatus, setTaskStatus] = useState(null);\r\n  const [availableModels, setAvailableModels] = useState([]);\r\n  const [selectedModel, setSelectedModel] = useState('base');\r\n  const [selectedFormat, setSelectedFormat] = useState('srt');\r\n  const [generatedFile, setGeneratedFile] = useState(null);\r\n  const [isServerAvailable, setIsServerAvailable] = useState(true);\r\n\r\n  // Check server availability and load models on component mount\r\n  useEffect(() => {\r\n    checkServerAndLoadModels();\r\n  }, []);\r\n\r\n  const checkServerAndLoadModels = async () => {\r\n    try {\r\n      await generatorApi.healthCheck();\r\n      const modelsData = await generatorApi.getAvailableModels();\r\n      setAvailableModels(modelsData.models || []);\r\n      setIsServerAvailable(true);\r\n    } catch (error) {\r\n      setIsServerAvailable(false);\r\n      showMessage('Subtitle Tools API server is not available. Please start it on port 8000.', 'error');\r\n    }\r\n  };\r\n\r\n  const handleVideoUpload = (file) => {\r\n    const extension = file.name.toLowerCase().split('.').pop();\r\n    \r\n    if (['mp4', 'avi', 'mov', 'mkv', 'wmv', 'flv', 'webm'].includes(extension)) {\r\n      setVideoFile(file);\r\n      showMessage(`Video file selected for subtitle generation: ${file.name}`, 'success');\r\n    } else {\r\n      showMessage(`Unsupported video file type: ${file.name}`, 'error');\r\n    }\r\n  };\r\n\r\n  const uploadVideoFile = async () => {\r\n    if (!videoFile) {\r\n      showMessage('Please select a video file first', 'error');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setUploadProgress(0);\r\n      const result = await generatorApi.uploadVideo(\r\n        videoFile,\r\n        (progress) => setUploadProgress(progress)\r\n      );\r\n      \r\n      showMessage(`Video uploaded successfully: ${result.filename}`, 'success');\r\n      return true;\r\n    } catch (error) {\r\n      showMessage(`Failed to upload video: ${error.message}`, 'error');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const startGeneration = async () => {\r\n    if (!videoFile) {\r\n      showMessage('Please select a video file first', 'error');\r\n      return;\r\n    }\r\n\r\n    setIsGenerating(true);\r\n    setGenerationProgress(0);\r\n    setTaskStatus(null);\r\n    setGeneratedFile(null);\r\n\r\n    try {\r\n      // First upload the video\r\n      const uploadSuccess = await uploadVideoFile();\r\n      if (!uploadSuccess) {\r\n        setIsGenerating(false);\r\n        return;\r\n      }\r\n\r\n      // Start generation\r\n      const result = await generatorApi.startGeneration(\r\n        videoFile.name,\r\n        selectedFormat,\r\n        selectedModel\r\n      );\r\n\r\n      setTaskId(result.task_id);\r\n      showMessage(`Subtitle generation started using ${selectedModel} model`, 'info');\r\n\r\n      // Poll for status updates\r\n      pollGenerationStatus(result.task_id);\r\n      \r\n    } catch (error) {\r\n      showMessage(`Failed to start generation: ${error.message}`, 'error');\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const pollGenerationStatus = async (taskId) => {\r\n    try {\r\n      const status = await generatorApi.pollTaskUntilComplete(taskId, 3000);\r\n      \r\n      if (status.status === 'completed') {\r\n        const result = await generatorApi.getTaskResult(taskId);\r\n        setGeneratedFile(result.output_file);\r\n        showMessage(`Subtitles generated successfully! ${result.segments_count} segments created.`, 'success');\r\n        \r\n        // Notify parent component about the generated subtitle\r\n        if (onSubtitleGenerated) {\r\n          onSubtitleGenerated(result.output_file, result);\r\n        }\r\n      } else if (status.status === 'failed') {\r\n        showMessage(`Generation failed: ${status.message}`, 'error');\r\n      }\r\n      \r\n      setTaskStatus(status);\r\n      setIsGenerating(false);\r\n      \r\n    } catch (error) {\r\n      showMessage(`Generation failed: ${error.message}`, 'error');\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  const downloadGeneratedFile = async () => {\r\n    if (!generatedFile) return;\r\n\r\n    try {\r\n      const blob = await generatorApi.downloadFile(generatedFile);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.style.display = 'none';\r\n      a.href = url;\r\n      a.download = generatedFile;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n      \r\n      showMessage(`Downloaded: ${generatedFile}`, 'success');\r\n    } catch (error) {\r\n      showMessage(`Failed to download file: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  if (!isServerAvailable) {\r\n    return (\r\n      <div className=\"card\" style={{ backgroundColor: '#fff3cd', borderLeft: '4px solid #ffc107' }}>\r\n        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '15px' }}>\r\n          <XCircle style={{ color: '#856404', marginRight: '10px' }} size={24} />\r\n          <h3 style={{ color: '#856404', margin: 0 }}>Generator Service Unavailable</h3>\r\n        </div>\r\n        <p style={{ color: '#856404', marginBottom: '15px' }}>\r\n          The Subtitle Tools API server is not running. To use subtitle generation features:\r\n        </p>\r\n        <div style={{ backgroundColor: '#f8f9fa', padding: '15px', borderRadius: '8px', fontFamily: 'monospace', fontSize: '0.9em', color: '#856404', marginBottom: '15px' }}>\r\n          python subtitle_tools_api.py\r\n        </div>\r\n        <button\r\n          onClick={checkServerAndLoadModels}\r\n          className=\"btn\"\r\n          style={{ background: '#ffc107', display: 'flex', alignItems: 'center', gap: '8px' }}\r\n        >\r\n          <RefreshCw size={16} />\r\n          <span>Retry Connection</span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '25px' }}>\r\n        <Play style={{ color: '#4CAF50', marginRight: '12px' }} size={24} />\r\n        <h3 style={{ color: '#333', margin: 0, fontSize: '1.3em' }}>Generate Subtitles from Video</h3>\r\n      </div>\r\n\r\n      {/* Video Upload Section */}\r\n      <div style={{ marginBottom: '25px' }}>\r\n        <label style={{ display: 'block', fontWeight: '600', color: '#333', marginBottom: '10px' }}>\r\n          Select Video File\r\n        </label>\r\n        <div \r\n          className=\"upload-area\" \r\n          style={{ \r\n            border: videoFile ? '2px dashed #4CAF50' : '2px dashed #ccc',\r\n            backgroundColor: videoFile ? 'rgba(76, 175, 80, 0.05)' : 'transparent'\r\n          }}\r\n        >\r\n          <input\r\n            type=\"file\"\r\n            accept=\".mp4,.avi,.mov,.mkv,.wmv,.flv,.webm\"\r\n            onChange={(e) => e.target.files[0] && handleVideoUpload(e.target.files[0])}\r\n            className=\"file-input\"\r\n            id=\"video-upload\"\r\n          />\r\n          <label htmlFor=\"video-upload\" style={{ cursor: 'pointer', display: 'block' }}>\r\n            <div className=\"upload-icon\">\r\n              <Video size={48} />\r\n            </div>\r\n            <div className=\"upload-text\">\r\n              {videoFile ? videoFile.name : 'Click to select video file or drag and drop'}\r\n            </div>\r\n            <div className=\"upload-subtext\">\r\n              Supports: MP4, AVI, MOV, MKV, WMV, FLV, WebM\r\n            </div>\r\n          </label>\r\n        </div>\r\n\r\n        {uploadProgress > 0 && uploadProgress < 100 && (\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-text\" style={{ textAlign: 'left', marginBottom: '5px' }}>\r\n              <span>Uploading... {uploadProgress}%</span>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div\r\n                className=\"progress-fill\"\r\n                style={{ width: `${uploadProgress}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Generation Settings */}\r\n      <div className=\"file-details\">\r\n        <div>\r\n          <label style={{ display: 'block', fontWeight: '600', color: '#333', marginBottom: '8px' }}>\r\n            Whisper Model\r\n          </label>\r\n          <select\r\n            value={selectedModel}\r\n            onChange={(e) => setSelectedModel(e.target.value)}\r\n            disabled={isGenerating}\r\n            style={{\r\n              width: '100%',\r\n              padding: '10px 12px',\r\n              border: '2px solid #ddd',\r\n              borderRadius: '8px',\r\n              fontSize: '0.95em',\r\n              backgroundColor: isGenerating ? '#f5f5f5' : 'white',\r\n              cursor: isGenerating ? 'not-allowed' : 'pointer'\r\n            }}\r\n          >\r\n            {availableModels.map((model) => (\r\n              <option key={model.name} value={model.name}>\r\n                {model.name} - {model.description}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label style={{ display: 'block', fontWeight: '600', color: '#333', marginBottom: '8px' }}>\r\n            Output Format\r\n          </label>\r\n          <select\r\n            value={selectedFormat}\r\n            onChange={(e) => setSelectedFormat(e.target.value)}\r\n            disabled={isGenerating}\r\n            style={{\r\n              width: '100%',\r\n              padding: '10px 12px',\r\n              border: '2px solid #ddd',\r\n              borderRadius: '8px',\r\n              fontSize: '0.95em',\r\n              backgroundColor: isGenerating ? '#f5f5f5' : 'white',\r\n              cursor: isGenerating ? 'not-allowed' : 'pointer'\r\n            }}\r\n          >\r\n            <option value=\"srt\">SRT</option>\r\n            <option value=\"vtt\">VTT</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Generation Button */}\r\n      <button\r\n        onClick={startGeneration}\r\n        disabled={!videoFile || isGenerating}\r\n        className=\"btn\"\r\n        style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          gap: '10px',\r\n          padding: '15px 20px',\r\n          backgroundColor: (!videoFile || isGenerating) ? '#ccc' : '#4CAF50',\r\n          cursor: (!videoFile || isGenerating) ? 'not-allowed' : 'pointer',\r\n          opacity: (!videoFile || isGenerating) ? 0.6 : 1,\r\n          marginTop: '20px'\r\n        }}\r\n      >\r\n        {isGenerating ? (\r\n          <>\r\n            <RefreshCw className=\"loading-spinner\" size={20} />\r\n            <span>Generating Subtitles...</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Play size={20} />\r\n            <span>Generate Subtitles</span>\r\n          </>\r\n        )}\r\n      </button>\r\n\r\n      {/* Generation Status */}\r\n      {taskStatus && (\r\n        <div className=\"result-item\" style={{ marginTop: '20px' }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n            {taskStatus.status === 'completed' ? (\r\n              <CheckCircle style={{ color: '#4CAF50', marginRight: '8px' }} size={20} />\r\n            ) : taskStatus.status === 'failed' ? (\r\n              <XCircle style={{ color: '#f44336', marginRight: '8px' }} size={20} />\r\n            ) : (\r\n              <Clock style={{ color: '#ff9800', marginRight: '8px' }} size={20} />\r\n            )}\r\n            <span style={{ fontWeight: '600', textTransform: 'capitalize' }}>{taskStatus.status}</span>\r\n          </div>\r\n          \r\n          <p style={{ color: '#666', fontSize: '0.95em', marginBottom: '10px' }}>{taskStatus.message}</p>\r\n          \r\n          {taskStatus.progress && (\r\n            <div style={{ marginTop: '15px' }}>\r\n              <div className=\"progress-text\" style={{ marginBottom: '5px' }}>\r\n                <span>Progress: {taskStatus.progress}%</span>\r\n              </div>\r\n              <div className=\"progress-bar\">\r\n                <div\r\n                  className=\"progress-fill\"\r\n                  style={{ \r\n                    width: `${taskStatus.progress}%`,\r\n                    background: 'linear-gradient(90deg, #4CAF50, #81C784)'\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Generated File Download */}\r\n      {generatedFile && taskStatus?.status === 'completed' && (\r\n        <div className=\"result-item\" style={{ marginTop: '20px', backgroundColor: '#d4edda', borderLeft: '4px solid #4CAF50' }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center' }}>\r\n              <FileText style={{ color: '#4CAF50', marginRight: '8px' }} size={20} />\r\n              <span style={{ fontWeight: '600', color: '#155724' }}>\r\n                Generated: {generatedFile}\r\n              </span>\r\n            </div>\r\n            <button\r\n              onClick={downloadGeneratedFile}\r\n              className=\"btn btn-secondary\"\r\n              style={{ \r\n                padding: '8px 12px', \r\n                fontSize: '0.9em',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '6px'\r\n              }}\r\n            >\r\n              <Download size={16} />\r\n              <span>Download</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubtitleGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
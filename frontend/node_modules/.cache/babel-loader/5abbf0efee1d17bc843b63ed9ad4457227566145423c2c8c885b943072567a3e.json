{"ast":null,"code":"var _jsxFileName = \"D:\\\\38029\\\\Subtitle Sync\\\\UI2\\\\UI\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Upload, Video, FileText, Download, Trash2, RefreshCw, CheckCircle, XCircle, Clock, Sidebar, Eye, EyeOff, Play, Zap } from 'lucide-react';\nimport SubtitleSyncAPI from './api';\nimport SubtitleGeneratorAPI from './generatorApi';\nimport FileManagerSidebar from './components/FileManagerSidebar';\nimport SubtitlePreview from './components/SubtitlePreview';\nimport SubtitleGenerator from './components/SubtitleGenerator';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = new SubtitleSyncAPI();\nconst generatorApi = new SubtitleGeneratorAPI();\nfunction App() {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [subtitleFile, setSubtitleFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [taskId, setTaskId] = useState(null);\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [taskResult, setTaskResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [files, setFiles] = useState({\n    upload_files: [],\n    output_files: []\n  });\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [originalSubtitleContent, setOriginalSubtitleContent] = useState('');\n  const [syncedSubtitleContent, setSyncedSubtitleContent] = useState('');\n  const [activeTab, setActiveTab] = useState('sync'); // 'sync' or 'generate'\n\n  // Repositioning state\n  const [isRepositioning, setIsRepositioning] = useState(false);\n  const [repositionResult, setRepositionResult] = useState(null);\n  const [repositionError, setRepositionError] = useState('');\n\n  // Handle file drop\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const extension = file.name.toLowerCase().split('.').pop();\n      if (['mp4', 'avi', 'mov', 'mkv', 'wmv', 'flv', 'webm'].includes(extension)) {\n        setVideoFile(file);\n        showMessage(`Video file selected: ${file.name}`, 'success');\n      } else if (['srt', 'vtt'].includes(extension)) {\n        setSubtitleFile(file);\n        showMessage(`Subtitle file selected: ${file.name}`, 'success');\n      } else {\n        showMessage(`Unsupported file type: ${file.name}`, 'error');\n      }\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'video/*': ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv', '.webm'],\n      'text/*': ['.srt', '.vtt']\n    },\n    multiple: true\n  });\n  const showMessage = (msg, type) => {\n    setMessage(msg);\n    setMessageType(type);\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const handleSubtitleGenerated = async (outputFile, result) => {\n    try {\n      // Load the generated subtitle content for preview\n      const content = await loadSubtitleContent(outputFile);\n      setOriginalSubtitleContent(content);\n\n      // Refresh file list to show the new file\n      await loadFileList();\n\n      // Switch to sync tab for further processing if needed\n      showMessage(`Subtitle generated successfully! Switch to \"Sync Subtitles\" tab to fine-tune timing.`, 'success');\n    } catch (error) {\n      console.error('Error handling generated subtitle:', error);\n    }\n  };\n  const readSubtitleFile = async file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = reject;\n      reader.readAsText(file);\n    });\n  };\n  const loadSubtitleContent = async filename => {\n    try {\n      const response = await fetch(`http://localhost:8000/download/${filename}`);\n      const content = await response.text();\n      return content;\n    } catch (error) {\n      console.error('Error loading subtitle content:', error);\n      return '';\n    }\n  };\n  const uploadFiles = async () => {\n    if (!videoFile || !subtitleFile) {\n      showMessage('Please select both video and subtitle files', 'error');\n      return;\n    }\n    setIsUploading(true);\n    setUploadProgress(0);\n    try {\n      // Read original subtitle content\n      const originalContent = await readSubtitleFile(subtitleFile);\n      setOriginalSubtitleContent(originalContent);\n      const result = await api.uploadFiles(videoFile, subtitleFile, progress => setUploadProgress(progress));\n      showMessage('Files uploaded successfully!', 'success');\n      loadFileList();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      showMessage(`Upload failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`, 'error');\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const startSynchronization = async () => {\n    if (!videoFile || !subtitleFile) {\n      showMessage('Please upload files first', 'error');\n      return;\n    }\n    setIsProcessing(true);\n    setTaskStatus(null);\n    setTaskResult(null);\n    try {\n      const result = await api.startSync(videoFile.name, subtitleFile.name);\n      setTaskId(result.task_id);\n      showMessage('Synchronization started!', 'info');\n\n      // Poll for status updates\n      await api.waitForCompletion(result.task_id, status => {\n        setTaskStatus(status);\n      }, 2000);\n\n      // Get final result\n      const finalResult = await api.getTaskResult(result.task_id);\n      setTaskResult(finalResult);\n      if (finalResult.success) {\n        showMessage('Synchronization completed successfully!', 'success');\n\n        // Load synced subtitle content if available\n        if (finalResult.output_file) {\n          const syncedContent = await loadSubtitleContent(finalResult.output_file);\n          setSyncedSubtitleContent(syncedContent);\n          setShowPreview(true); // Automatically show preview after sync\n        }\n        loadFileList();\n      } else {\n        showMessage(`Synchronization failed: ${finalResult.message}`, 'error');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      showMessage(`Synchronization failed: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message}`, 'error');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const downloadFile = async filename => {\n    try {\n      await api.downloadFile(filename);\n      showMessage(`Downloaded: ${filename}`, 'success');\n    } catch (error) {\n      showMessage(`Download failed: ${error.message}`, 'error');\n    }\n  };\n  const deleteFile = async (filename, fileType) => {\n    try {\n      await api.deleteFile(filename, fileType);\n      showMessage(`Deleted: ${filename}`, 'success');\n      loadFileList();\n    } catch (error) {\n      showMessage(`Delete failed: ${error.message}`, 'error');\n    }\n  };\n  const loadFileList = async () => {\n    try {\n      const fileList = await api.listFiles();\n      setFiles(fileList);\n    } catch (error) {\n      console.error('Failed to load file list:', error);\n    }\n  };\n  const clearFiles = () => {\n    setVideoFile(null);\n    setSubtitleFile(null);\n    setTaskId(null);\n    setTaskStatus(null);\n    setTaskResult(null);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-5 h-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 16\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-5 h-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 16\n        }, this);\n      case 'processing':\n        return /*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"w-5 h-5 text-blue-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-5 h-5 text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Load file list on component mount\n  React.useEffect(() => {\n    loadFileList();\n  }, []);\n\n  // Handler to trigger repositioning\n  const handleReposition = async () => {\n    if (!taskResult || !taskResult.output_file || !videoFile) {\n      showMessage('Synchronization must be completed first', 'error');\n      return;\n    }\n    setIsRepositioning(true);\n    setRepositionResult(null);\n    setRepositionError('');\n    try {\n      const response = await api.repositionSubtitles({\n        video_filename: videoFile.name,\n        subtitle_filename: taskResult.output_file\n      });\n      setRepositionResult(response.output_filename);\n      showMessage('Subtitle repositioning completed!', 'success');\n      loadFileList();\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n      setRepositionError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message);\n      showMessage(`Repositioning failed: ${((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || error.message}`, 'error');\n    } finally {\n      setIsRepositioning(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sidebar-toggle\",\n      onClick: () => setShowSidebar(!showSidebar),\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        className: \"w-5 h-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), \"File Manager\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileManagerSidebar, {\n      isOpen: showSidebar,\n      onClose: () => setShowSidebar(false),\n      files: files,\n      onRefresh: loadFileList,\n      onDownload: downloadFile,\n      onDelete: deleteFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${showSidebar ? 'with-sidebar' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83C\\uDFAC Subtitle Tools\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Generate and synchronize subtitle files with video audio tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-container\",\n          style: {\n            marginBottom: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-nav\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab('generate'),\n              className: `tab-button ${activeTab === 'generate' ? 'active' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(Play, {\n                className: \"w-4 h-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 13\n              }, this), \"Generate Subtitles\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab('sync'),\n              className: `tab-button ${activeTab === 'sync' ? 'active' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(Zap, {\n                className: \"w-4 h-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 13\n              }, this), \"Sync Subtitles\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 7\n        }, this), activeTab === 'generate' ?\n        /*#__PURE__*/\n        // Subtitle Generation Tab\n        _jsxDEV(SubtitleGenerator, {\n          generatorApi: generatorApi,\n          onSubtitleGenerated: handleSubtitleGenerated,\n          showMessage: showMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }, this) :\n        /*#__PURE__*/\n        // Subtitle Synchronization Tab\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                marginBottom: '20px',\n                color: '#333'\n              },\n              children: \"Upload Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              className: `upload-area ${isDragActive ? 'dragover' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-icon\",\n                children: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-text\",\n                children: isDragActive ? 'Drop files here...' : 'Drag & drop files here, or click to select'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-subtext\",\n                children: \"Supports: MP4, AVI, MOV, MKV (video) \\u2022 SRT, VTT (subtitles)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 9\n            }, this), (videoFile || subtitleFile) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Selected Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-details\",\n                children: [videoFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Video, {\n                    className: \"w-4 h-4 inline mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Video:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 19\n                  }, this), \" \", videoFile.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"Size: \", SubtitleSyncAPI.formatFileSize(videoFile.size)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 17\n                }, this), subtitleFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(FileText, {\n                    className: \"w-4 h-4 inline mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Subtitle:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 19\n                  }, this), \" \", subtitleFile.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [\"Size: \", SubtitleSyncAPI.formatFileSize(subtitleFile.size)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 11\n            }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-fill\",\n                  style: {\n                    width: `${uploadProgress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-text\",\n                children: [\"Uploading... \", uploadProgress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: uploadFiles,\n                disabled: !videoFile || !subtitleFile || isUploading,\n                children: isUploading ? 'Uploading...' : 'Upload Files'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: startSynchronization,\n                disabled: !videoFile || !subtitleFile || isProcessing || isUploading,\n                children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"loading-spinner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 17\n                  }, this), \"Processing...\"]\n                }, void 0, true) : 'Start Synchronization'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: clearFiles,\n                style: {\n                  background: '#ff5722'\n                },\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 7\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-message status-${messageType}`,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 9\n          }, this), taskStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '15px',\n                color: '#333'\n              },\n              children: [getStatusIcon(taskStatus.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Processing Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-message status-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 13\n              }, this), \" \", taskStatus.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 13\n              }, this), \" \", taskStatus.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 11\n            }, this), taskStatus.progress !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-fill\",\n                  style: {\n                    width: `${taskStatus.progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-text\",\n                children: [\"Progress: \", taskStatus.progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 9\n          }, this), taskResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '15px',\n                color: '#333'\n              },\n              children: [taskResult.success ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"w-6 h-6 text-green-500 inline mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 15\n              }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n                className: \"w-6 h-6 text-red-500 inline mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 15\n              }, this), \"Synchronization Result\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `status-message ${taskResult.success ? 'status-success' : 'status-error'}`,\n              children: taskResult.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 11\n            }, this), taskResult.success && taskResult.output_file && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-header\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-title\",\n                  children: [\"\\uD83D\\uDCC4 \", taskResult.output_file]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [taskResult.processing_time && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Processing time: \", SubtitleSyncAPI.formatProcessingTime(taskResult.processing_time)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 19\n                }, this), taskResult.offset_applied && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Offset applied: \", taskResult.offset_applied.toFixed(2), \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-secondary\",\n                  onClick: () => downloadFile(taskResult.output_file),\n                  children: [/*#__PURE__*/_jsxDEV(Download, {\n                    className: \"w-4 h-4 inline mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 19\n                  }, this), \"Download Synchronized Subtitles\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  onClick: () => setShowPreview(!showPreview),\n                  style: {\n                    background: '#9c27b0'\n                  },\n                  children: [showPreview ? /*#__PURE__*/_jsxDEV(EyeOff, {\n                    className: \"w-4 h-4 inline mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 34\n                  }, this) : /*#__PURE__*/_jsxDEV(Eye, {\n                    className: \"w-4 h-4 inline mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 79\n                  }, this), showPreview ? 'Hide Preview' : 'Show Preview']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-accent\",\n                  onClick: handleReposition,\n                  disabled: isRepositioning || !taskResult.success,\n                  style: {\n                    background: '#2196f3',\n                    color: '#fff',\n                    marginLeft: '10px'\n                  },\n                  children: isRepositioning ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"loading-spinner\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 23\n                    }, this), \"Repositioning...\"]\n                  }, void 0, true) : 'Reposition Subtitles'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 9\n          }, this), repositionResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                marginBottom: '15px',\n                color: '#333'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"w-6 h-6 text-blue-500 inline mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 13\n              }, this), \"Subtitle Repositioning Result\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-title\",\n                children: [\"\\uD83D\\uDCC4 \", repositionResult]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: () => downloadFile(repositionResult),\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  className: \"w-4 h-4 inline ml-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 15\n                }, this), \"Download Repositioned Subtitles\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 9\n          }, this), repositionError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-message status-error\",\n            children: repositionError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 9\n          }, this), showPreview && (originalSubtitleContent || syncedSubtitleContent) && /*#__PURE__*/_jsxDEV(SubtitlePreview, {\n            originalContent: originalSubtitleContent,\n            syncedContent: syncedSubtitleContent,\n            onClose: () => setShowPreview(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hR+Z+RNrUu8N0Vs1bHhU5xXPiFM=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","Upload","Video","FileText","Download","Trash2","RefreshCw","CheckCircle","XCircle","Clock","Sidebar","Eye","EyeOff","Play","Zap","SubtitleSyncAPI","SubtitleGeneratorAPI","FileManagerSidebar","SubtitlePreview","SubtitleGenerator","jsxDEV","_jsxDEV","Fragment","_Fragment","api","generatorApi","App","_s","videoFile","setVideoFile","subtitleFile","setSubtitleFile","uploadProgress","setUploadProgress","isUploading","setIsUploading","taskId","setTaskId","taskStatus","setTaskStatus","taskResult","setTaskResult","isProcessing","setIsProcessing","message","setMessage","messageType","setMessageType","files","setFiles","upload_files","output_files","showSidebar","setShowSidebar","showPreview","setShowPreview","originalSubtitleContent","setOriginalSubtitleContent","syncedSubtitleContent","setSyncedSubtitleContent","activeTab","setActiveTab","isRepositioning","setIsRepositioning","repositionResult","setRepositionResult","repositionError","setRepositionError","onDrop","acceptedFiles","forEach","file","extension","name","toLowerCase","split","pop","includes","showMessage","getRootProps","getInputProps","isDragActive","accept","multiple","msg","type","setTimeout","handleSubtitleGenerated","outputFile","result","content","loadSubtitleContent","loadFileList","error","console","readSubtitleFile","Promise","resolve","reject","reader","FileReader","onload","e","target","onerror","readAsText","filename","response","fetch","text","uploadFiles","originalContent","progress","_error$response","_error$response$data","data","detail","startSynchronization","startSync","task_id","waitForCompletion","status","finalResult","getTaskResult","success","output_file","syncedContent","_error$response2","_error$response2$data","downloadFile","deleteFile","fileType","fileList","listFiles","clearFiles","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","useEffect","handleReposition","repositionSubtitles","video_filename","subtitle_filename","output_filename","_error$response3","_error$response3$data","_error$response4","_error$response4$data","children","onClick","isOpen","onClose","onRefresh","onDownload","onDelete","style","marginBottom","onSubtitleGenerated","color","formatFileSize","size","width","disabled","background","marginLeft","processing_time","formatProcessingTime","offset_applied","toFixed","_c","$RefreshReg$"],"sources":["D:/38029/Subtitle Sync/UI2/UI/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Upload, Video, FileText, Download, Trash2, RefreshCw, CheckCircle, XCircle, Clock, Sidebar, Eye, EyeOff, Play, Zap } from 'lucide-react';\r\nimport SubtitleSyncAPI from './api';\r\nimport SubtitleGeneratorAPI from './generatorApi';\r\nimport FileManagerSidebar from './components/FileManagerSidebar';\r\nimport SubtitlePreview from './components/SubtitlePreview';\r\nimport SubtitleGenerator from './components/SubtitleGenerator';\r\n\r\nconst api = new SubtitleSyncAPI();\r\nconst generatorApi = new SubtitleGeneratorAPI();\r\n\r\nfunction App() {\r\n  const [videoFile, setVideoFile] = useState(null);\r\n  const [subtitleFile, setSubtitleFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [taskId, setTaskId] = useState(null);\r\n  const [taskStatus, setTaskStatus] = useState(null);\r\n  const [taskResult, setTaskResult] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [files, setFiles] = useState({ upload_files: [], output_files: [] });\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [originalSubtitleContent, setOriginalSubtitleContent] = useState('');\r\n  const [syncedSubtitleContent, setSyncedSubtitleContent] = useState('');\r\n  const [activeTab, setActiveTab] = useState('sync'); // 'sync' or 'generate'\r\n\r\n  // Repositioning state\r\n  const [isRepositioning, setIsRepositioning] = useState(false);\r\n  const [repositionResult, setRepositionResult] = useState(null);\r\n  const [repositionError, setRepositionError] = useState('');\r\n\r\n  // Handle file drop\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const extension = file.name.toLowerCase().split('.').pop();\r\n      \r\n      if (['mp4', 'avi', 'mov', 'mkv', 'wmv', 'flv', 'webm'].includes(extension)) {\r\n        setVideoFile(file);\r\n        showMessage(`Video file selected: ${file.name}`, 'success');\r\n      } else if (['srt', 'vtt'].includes(extension)) {\r\n        setSubtitleFile(file);\r\n        showMessage(`Subtitle file selected: ${file.name}`, 'success');\r\n      } else {\r\n        showMessage(`Unsupported file type: ${file.name}`, 'error');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'video/*': ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv', '.webm'],\r\n      'text/*': ['.srt', '.vtt']\r\n    },\r\n    multiple: true\r\n  });\r\n\r\n  const showMessage = (msg, type) => {\r\n    setMessage(msg);\r\n    setMessageType(type);\r\n    setTimeout(() => {\r\n      setMessage('');\r\n      setMessageType('');\r\n    }, 5000);\r\n  };\r\n\r\n  const handleSubtitleGenerated = async (outputFile, result) => {\r\n    try {\r\n      // Load the generated subtitle content for preview\r\n      const content = await loadSubtitleContent(outputFile);\r\n      setOriginalSubtitleContent(content);\r\n      \r\n      // Refresh file list to show the new file\r\n      await loadFileList();\r\n      \r\n      // Switch to sync tab for further processing if needed\r\n      showMessage(`Subtitle generated successfully! Switch to \"Sync Subtitles\" tab to fine-tune timing.`, 'success');\r\n    } catch (error) {\r\n      console.error('Error handling generated subtitle:', error);\r\n    }\r\n  };\r\n\r\n  const readSubtitleFile = async (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => resolve(e.target.result);\r\n      reader.onerror = reject;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const loadSubtitleContent = async (filename) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/download/${filename}`);\r\n      const content = await response.text();\r\n      return content;\r\n    } catch (error) {\r\n      console.error('Error loading subtitle content:', error);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    if (!videoFile || !subtitleFile) {\r\n      showMessage('Please select both video and subtitle files', 'error');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      // Read original subtitle content\r\n      const originalContent = await readSubtitleFile(subtitleFile);\r\n      setOriginalSubtitleContent(originalContent);\r\n\r\n      const result = await api.uploadFiles(\r\n        videoFile,\r\n        subtitleFile,\r\n        (progress) => setUploadProgress(progress)\r\n      );\r\n      \r\n      showMessage('Files uploaded successfully!', 'success');\r\n      loadFileList();\r\n    } catch (error) {\r\n      showMessage(`Upload failed: ${error.response?.data?.detail || error.message}`, 'error');\r\n    } finally {\r\n      setIsUploading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const startSynchronization = async () => {\r\n    if (!videoFile || !subtitleFile) {\r\n      showMessage('Please upload files first', 'error');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    setTaskStatus(null);\r\n    setTaskResult(null);\r\n\r\n    try {\r\n      const result = await api.startSync(videoFile.name, subtitleFile.name);\r\n      setTaskId(result.task_id);\r\n      showMessage('Synchronization started!', 'info');\r\n\r\n      // Poll for status updates\r\n      await api.waitForCompletion(\r\n        result.task_id,\r\n        (status) => {\r\n          setTaskStatus(status);\r\n        },\r\n        2000\r\n      );\r\n\r\n      // Get final result\r\n      const finalResult = await api.getTaskResult(result.task_id);\r\n      setTaskResult(finalResult);\r\n      \r\n      if (finalResult.success) {\r\n        showMessage('Synchronization completed successfully!', 'success');\r\n        \r\n        // Load synced subtitle content if available\r\n        if (finalResult.output_file) {\r\n          const syncedContent = await loadSubtitleContent(finalResult.output_file);\r\n          setSyncedSubtitleContent(syncedContent);\r\n          setShowPreview(true); // Automatically show preview after sync\r\n        }\r\n        \r\n        loadFileList();\r\n      } else {\r\n        showMessage(`Synchronization failed: ${finalResult.message}`, 'error');\r\n      }\r\n    } catch (error) {\r\n      showMessage(`Synchronization failed: ${error.response?.data?.detail || error.message}`, 'error');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (filename) => {\r\n    try {\r\n      await api.downloadFile(filename);\r\n      showMessage(`Downloaded: ${filename}`, 'success');\r\n    } catch (error) {\r\n      showMessage(`Download failed: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const deleteFile = async (filename, fileType) => {\r\n    try {\r\n      await api.deleteFile(filename, fileType);\r\n      showMessage(`Deleted: ${filename}`, 'success');\r\n      loadFileList();\r\n    } catch (error) {\r\n      showMessage(`Delete failed: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const loadFileList = async () => {\r\n    try {\r\n      const fileList = await api.listFiles();\r\n      setFiles(fileList);\r\n    } catch (error) {\r\n      console.error('Failed to load file list:', error);\r\n    }\r\n  };\r\n\r\n  const clearFiles = () => {\r\n    setVideoFile(null);\r\n    setSubtitleFile(null);\r\n    setTaskId(null);\r\n    setTaskStatus(null);\r\n    setTaskResult(null);\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\r\n      case 'failed':\r\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\r\n      case 'processing':\r\n        return <RefreshCw className=\"w-5 h-5 text-blue-500 animate-spin\" />;\r\n      default:\r\n        return <Clock className=\"w-5 h-5 text-yellow-500\" />;\r\n    }\r\n  };\r\n\r\n  // Load file list on component mount\r\n  React.useEffect(() => {\r\n    loadFileList();\r\n  }, []);\r\n\r\n  // Handler to trigger repositioning\r\n  const handleReposition = async () => {\r\n    if (!taskResult || !taskResult.output_file || !videoFile) {\r\n      showMessage('Synchronization must be completed first', 'error');\r\n      return;\r\n    }\r\n    setIsRepositioning(true);\r\n    setRepositionResult(null);\r\n    setRepositionError('');\r\n    try {\r\n      const response = await api.repositionSubtitles({\r\n        video_filename: videoFile.name,\r\n        subtitle_filename: taskResult.output_file,\r\n      });\r\n      setRepositionResult(response.output_filename);\r\n      showMessage('Subtitle repositioning completed!', 'success');\r\n      loadFileList();\r\n    } catch (error) {\r\n      setRepositionError(error.response?.data?.detail || error.message);\r\n      showMessage(`Repositioning failed: ${error.response?.data?.detail || error.message}`, 'error');\r\n    } finally {\r\n      setIsRepositioning(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* Sidebar Toggle Button */}\r\n      <button \r\n        className=\"sidebar-toggle\"\r\n        onClick={() => setShowSidebar(!showSidebar)}\r\n      >\r\n        <Sidebar className=\"w-5 h-5\" />\r\n        File Manager\r\n      </button>\r\n\r\n      {/* File Manager Sidebar */}\r\n      <FileManagerSidebar \r\n        isOpen={showSidebar}\r\n        onClose={() => setShowSidebar(false)}\r\n        files={files}\r\n        onRefresh={loadFileList}\r\n        onDownload={downloadFile}\r\n        onDelete={deleteFile}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <div className={`main-content ${showSidebar ? 'with-sidebar' : ''}`}>\r\n        <div className=\"container\">\r\n      {/* Header */}\r\n      <div className=\"header\">\r\n        <h1>🎬 Subtitle Tools</h1>\r\n        <p>Generate and synchronize subtitle files with video audio tracks</p>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"tab-container\" style={{ marginBottom: '20px' }}>\r\n        <div className=\"tab-nav\">\r\n          <button\r\n            onClick={() => setActiveTab('generate')}\r\n            className={`tab-button ${activeTab === 'generate' ? 'active' : ''}`}\r\n          >\r\n            <Play className=\"w-4 h-4 mr-2\" />\r\n            Generate Subtitles\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('sync')}\r\n            className={`tab-button ${activeTab === 'sync' ? 'active' : ''}`}\r\n          >\r\n            <Zap className=\"w-4 h-4 mr-2\" />\r\n            Sync Subtitles\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      {activeTab === 'generate' ? (\r\n        // Subtitle Generation Tab\r\n        <SubtitleGenerator\r\n          generatorApi={generatorApi}\r\n          onSubtitleGenerated={handleSubtitleGenerated}\r\n          showMessage={showMessage}\r\n        />\r\n      ) : (\r\n        // Subtitle Synchronization Tab\r\n        <>\r\n      {/* File Upload Section */}\r\n      <div className=\"card\">\r\n        <h2 style={{ marginBottom: '20px', color: '#333' }}>Upload Files</h2>\r\n        \r\n        <div \r\n          {...getRootProps()} \r\n          className={`upload-area ${isDragActive ? 'dragover' : ''}`}\r\n        >\r\n          <input {...getInputProps()} />\r\n          <div className=\"upload-icon\">\r\n            <Upload />\r\n          </div>\r\n          <div className=\"upload-text\">\r\n            {isDragActive ? 'Drop files here...' : 'Drag & drop files here, or click to select'}\r\n          </div>\r\n          <div className=\"upload-subtext\">\r\n            Supports: MP4, AVI, MOV, MKV (video) • SRT, VTT (subtitles)\r\n          </div>\r\n        </div>\r\n\r\n        {/* Selected Files Display */}\r\n        {(videoFile || subtitleFile) && (\r\n          <div className=\"file-info\">\r\n            <h4>Selected Files</h4>\r\n            <div className=\"file-details\">\r\n              {videoFile && (\r\n                <div>\r\n                  <Video className=\"w-4 h-4 inline mr-2\" />\r\n                  <strong>Video:</strong> {videoFile.name}\r\n                  <br />\r\n                  <small>Size: {SubtitleSyncAPI.formatFileSize(videoFile.size)}</small>\r\n                </div>\r\n              )}\r\n              {subtitleFile && (\r\n                <div>\r\n                  <FileText className=\"w-4 h-4 inline mr-2\" />\r\n                  <strong>Subtitle:</strong> {subtitleFile.name}\r\n                  <br />\r\n                  <small>Size: {SubtitleSyncAPI.formatFileSize(subtitleFile.size)}</small>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Upload Progress */}\r\n        {isUploading && (\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\" \r\n                style={{ width: `${uploadProgress}%` }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"progress-text\">\r\n              Uploading... {uploadProgress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"file-actions\">\r\n          <button \r\n            className=\"btn\" \r\n            onClick={uploadFiles}\r\n            disabled={!videoFile || !subtitleFile || isUploading}\r\n          >\r\n            {isUploading ? 'Uploading...' : 'Upload Files'}\r\n          </button>\r\n          \r\n          <button \r\n            className=\"btn btn-secondary\" \r\n            onClick={startSynchronization}\r\n            disabled={!videoFile || !subtitleFile || isProcessing || isUploading}\r\n          >\r\n            {isProcessing ? (\r\n              <>\r\n                <span className=\"loading-spinner\"></span>\r\n                Processing...\r\n              </>\r\n            ) : (\r\n              'Start Synchronization'\r\n            )}\r\n          </button>\r\n\r\n          <button \r\n            className=\"btn\" \r\n            onClick={clearFiles}\r\n            style={{ background: '#ff5722' }}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Messages */}\r\n      {message && (\r\n        <div className={`status-message status-${messageType}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {/* Processing Status */}\r\n      {taskStatus && (\r\n        <div className=\"card\">\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>\r\n            {getStatusIcon(taskStatus.status)}\r\n            <span style={{ marginLeft: '10px' }}>Processing Status</span>\r\n          </h3>\r\n          \r\n          <div className=\"status-message status-info\">\r\n            <strong>Status:</strong> {taskStatus.status}<br />\r\n            <strong>Message:</strong> {taskStatus.message}\r\n          </div>\r\n\r\n          {taskStatus.progress !== null && (\r\n            <div className=\"progress-container\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\" \r\n                  style={{ width: `${taskStatus.progress}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"progress-text\">\r\n                Progress: {taskStatus.progress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Results */}\r\n      {taskResult && (\r\n        <div className=\"card\">\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>\r\n            {taskResult.success ? (\r\n              <CheckCircle className=\"w-6 h-6 text-green-500 inline mr-2\" />\r\n            ) : (\r\n              <XCircle className=\"w-6 h-6 text-red-500 inline mr-2\" />\r\n            )}\r\n            Synchronization Result\r\n          </h3>\r\n\r\n          <div className={`status-message ${taskResult.success ? 'status-success' : 'status-error'}`}>\r\n            {taskResult.message}\r\n          </div>\r\n\r\n          {taskResult.success && taskResult.output_file && (\r\n            <div className=\"result-item\">\r\n              <div className=\"result-header\">\r\n                <div className=\"result-title\">\r\n                  📄 {taskResult.output_file}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"result-details\">\r\n                {taskResult.processing_time && (\r\n                  <div>Processing time: {SubtitleSyncAPI.formatProcessingTime(taskResult.processing_time)}</div>\r\n                )}\r\n                {taskResult.offset_applied && (\r\n                  <div>Offset applied: {taskResult.offset_applied.toFixed(2)}s</div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"file-actions\">\r\n                <button \r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => downloadFile(taskResult.output_file)}\r\n                >\r\n                  <Download className=\"w-4 h-4 inline mr-2\" />\r\n                  Download Synchronized Subtitles\r\n                </button>\r\n                \r\n                <button \r\n                  className=\"btn\"\r\n                  onClick={() => setShowPreview(!showPreview)}\r\n                  style={{ background: '#9c27b0' }}\r\n                >\r\n                  {showPreview ? <EyeOff className=\"w-4 h-4 inline mr-2\" /> : <Eye className=\"w-4 h-4 inline mr-2\" />}\r\n                  {showPreview ? 'Hide Preview' : 'Show Preview'}\r\n                </button>\r\n                {/* Reposition Subtitles Button */}\r\n                <button\r\n                  className=\"btn btn-accent\"\r\n                  onClick={handleReposition}\r\n                  disabled={isRepositioning || !taskResult.success}\r\n                  style={{ background: '#2196f3', color: '#fff', marginLeft: '10px' }}\r\n                >\r\n                  {isRepositioning ? (\r\n                    <>\r\n                      <span className=\"loading-spinner\"></span>\r\n                      Repositioning...\r\n                    </>\r\n                  ) : (\r\n                    'Reposition Subtitles'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Reposition Result Display */}\r\n      {repositionResult && (\r\n        <div className=\"card\">\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>\r\n            <CheckCircle className=\"w-6 h-6 text-blue-500 inline mr-2\" />\r\n            Subtitle Repositioning Result\r\n          </h3>\r\n          <div className=\"result-item\">\r\n            <div className=\"result-title\">📄 {repositionResult}</div>\r\n            <br></br>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => downloadFile(repositionResult)}\r\n            >\r\n              <Download className=\"w-4 h-4 inline ml-6\" />\r\n              Download Repositioned Subtitles\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Reposition Error Display */}\r\n      {repositionError && (\r\n        <div className=\"status-message status-error\">\r\n          {repositionError}\r\n        </div>\r\n      )}\r\n\r\n      {/* Subtitle Preview */}\r\n      {showPreview && (originalSubtitleContent || syncedSubtitleContent) && (\r\n        <SubtitlePreview \r\n          originalContent={originalSubtitleContent}\r\n          syncedContent={syncedSubtitleContent}\r\n          onClose={() => setShowPreview(false)}\r\n        />\r\n      )}\r\n        </>\r\n      )}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\38029\\\\Subtitle Sync\\\\UI\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Upload, Video, FileText, Download, Trash2, RefreshCw, CheckCircle, XCircle, Clock, Sidebar, Eye, EyeOff } from 'lucide-react';\nimport SubtitleSyncAPI from './api';\nimport FileManagerSidebar from './components/FileManagerSidebar';\nimport SubtitlePreview from './components/SubtitlePreview';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = new SubtitleSyncAPI();\nfunction App() {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [subtitleFile, setSubtitleFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [taskId, setTaskId] = useState(null);\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [taskResult, setTaskResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [files, setFiles] = useState({\n    upload_files: [],\n    output_files: []\n  });\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [originalSubtitleContent, setOriginalSubtitleContent] = useState('');\n  const [syncedSubtitleContent, setSyncedSubtitleContent] = useState('');\n\n  // Handle file drop\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const extension = file.name.toLowerCase().split('.').pop();\n      if (['mp4', 'avi', 'mov', 'mkv', 'wmv', 'flv', 'webm'].includes(extension)) {\n        setVideoFile(file);\n        showMessage(`Video file selected: ${file.name}`, 'success');\n      } else if (['srt', 'vtt'].includes(extension)) {\n        setSubtitleFile(file);\n        showMessage(`Subtitle file selected: ${file.name}`, 'success');\n      } else {\n        showMessage(`Unsupported file type: ${file.name}`, 'error');\n      }\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'video/*': ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv', '.webm'],\n      'text/*': ['.srt', '.vtt']\n    },\n    multiple: true\n  });\n  const showMessage = (msg, type) => {\n    setMessage(msg);\n    setMessageType(type);\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const readSubtitleFile = async file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target.result);\n      reader.onerror = reject;\n      reader.readAsText(file);\n    });\n  };\n  const loadSubtitleContent = async filename => {\n    try {\n      const response = await fetch(`http://localhost:8000/download/${filename}`);\n      const content = await response.text();\n      return content;\n    } catch (error) {\n      console.error('Error loading subtitle content:', error);\n      return '';\n    }\n  };\n  const uploadFiles = async () => {\n    if (!videoFile || !subtitleFile) {\n      showMessage('Please select both video and subtitle files', 'error');\n      return;\n    }\n    setIsUploading(true);\n    setUploadProgress(0);\n    try {\n      // Read original subtitle content\n      const originalContent = await readSubtitleFile(subtitleFile);\n      setOriginalSubtitleContent(originalContent);\n      const result = await api.uploadFiles(videoFile, subtitleFile, progress => setUploadProgress(progress));\n      showMessage('Files uploaded successfully!', 'success');\n      loadFileList();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      showMessage(`Upload failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`, 'error');\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const startSynchronization = async () => {\n    if (!videoFile || !subtitleFile) {\n      showMessage('Please upload files first', 'error');\n      return;\n    }\n    setIsProcessing(true);\n    setTaskStatus(null);\n    setTaskResult(null);\n    try {\n      const result = await api.startSync(videoFile.name, subtitleFile.name);\n      setTaskId(result.task_id);\n      showMessage('Synchronization started!', 'info');\n\n      // Poll for status updates\n      await api.waitForCompletion(result.task_id, status => {\n        setTaskStatus(status);\n      }, 2000);\n\n      // Get final result\n      const finalResult = await api.getTaskResult(result.task_id);\n      setTaskResult(finalResult);\n      if (finalResult.success) {\n        showMessage('Synchronization completed successfully!', 'success');\n\n        // Load synced subtitle content if available\n        if (finalResult.output_file) {\n          const syncedContent = await loadSubtitleContent(finalResult.output_file);\n          setSyncedSubtitleContent(syncedContent);\n          setShowPreview(true); // Automatically show preview after sync\n        }\n        loadFileList();\n      } else {\n        showMessage(`Synchronization failed: ${finalResult.message}`, 'error');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      showMessage(`Synchronization failed: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message}`, 'error');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const downloadFile = async filename => {\n    try {\n      await api.downloadFile(filename);\n      showMessage(`Downloaded: ${filename}`, 'success');\n    } catch (error) {\n      showMessage(`Download failed: ${error.message}`, 'error');\n    }\n  };\n  const deleteFile = async (filename, fileType) => {\n    try {\n      await api.deleteFile(filename, fileType);\n      showMessage(`Deleted: ${filename}`, 'success');\n      loadFileList();\n    } catch (error) {\n      showMessage(`Delete failed: ${error.message}`, 'error');\n    }\n  };\n  const loadFileList = async () => {\n    try {\n      const fileList = await api.listFiles();\n      setFiles(fileList);\n    } catch (error) {\n      console.error('Failed to load file list:', error);\n    }\n  };\n  const clearFiles = () => {\n    setVideoFile(null);\n    setSubtitleFile(null);\n    setTaskId(null);\n    setTaskStatus(null);\n    setTaskResult(null);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-5 h-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 16\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-5 h-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 16\n        }, this);\n      case 'processing':\n        return /*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"w-5 h-5 text-blue-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-5 h-5 text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Load file list on component mount\n  React.useEffect(() => {\n    loadFileList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sidebar-toggle\",\n      onClick: () => setShowSidebar(!showSidebar),\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        className: \"w-5 h-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), \"File Manager\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileManagerSidebar, {\n      isOpen: showSidebar,\n      onClose: () => setShowSidebar(false),\n      files: files,\n      onRefresh: loadFileList,\n      onDownload: downloadFile,\n      onDelete: deleteFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `main-content ${showSidebar ? 'with-sidebar' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83C\\uDFAC Subtitle Synchronizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Automatically sync subtitle files with video audio tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              marginBottom: '20px',\n              color: '#333'\n            },\n            children: \"Upload Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRootProps(),\n            className: `upload-area ${isDragActive ? 'dragover' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-icon\",\n              children: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-text\",\n              children: isDragActive ? 'Drop files here...' : 'Drag & drop files here, or click to select'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-subtext\",\n              children: \"Supports: MP4, AVI, MOV, MKV (video) \\u2022 SRT, VTT (subtitles)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 9\n          }, this), (videoFile || subtitleFile) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Selected Files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-details\",\n              children: [videoFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Video, {\n                  className: \"w-4 h-4 inline mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Video:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), \" \", videoFile.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"Size: \", SubtitleSyncAPI.formatFileSize(videoFile.size)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), subtitleFile && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"w-4 h-4 inline mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Subtitle:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), \" \", subtitleFile.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"Size: \", SubtitleSyncAPI.formatFileSize(subtitleFile.size)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${uploadProgress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-text\",\n              children: [\"Uploading... \", uploadProgress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: uploadFiles,\n              disabled: !videoFile || !subtitleFile || isUploading,\n              children: isUploading ? 'Uploading...' : 'Upload Files'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: startSynchronization,\n              disabled: !videoFile || !subtitleFile || isProcessing || isUploading,\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"loading-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 17\n                }, this), \"Processing...\"]\n              }, void 0, true) : 'Start Synchronization'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: clearFiles,\n              style: {\n                background: '#ff5722'\n              },\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 7\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-message status-${messageType}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 9\n        }, this), taskStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '15px',\n              color: '#333'\n            },\n            children: [getStatusIcon(taskStatus.status), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '10px'\n              },\n              children: \"Processing Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-message status-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 13\n            }, this), \" \", taskStatus.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 57\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 13\n            }, this), \" \", taskStatus.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 11\n          }, this), taskStatus.progress !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${taskStatus.progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-text\",\n              children: [\"Progress: \", taskStatus.progress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 9\n        }, this), taskResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '15px',\n              color: '#333'\n            },\n            children: [taskResult.success ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-6 h-6 text-green-500 inline mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              className: \"w-6 h-6 text-red-500 inline mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), \"Synchronization Result\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-message ${taskResult.success ? 'status-success' : 'status-error'}`,\n            children: taskResult.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 11\n          }, this), taskResult.success && taskResult.output_file && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-header\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-title\",\n                children: [\"\\uD83D\\uDCC4 \", taskResult.output_file]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-details\",\n              children: [taskResult.processing_time && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Processing time: \", SubtitleSyncAPI.formatProcessingTime(taskResult.processing_time)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this), taskResult.offset_applied && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Offset applied: \", taskResult.offset_applied.toFixed(2), \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => downloadFile(taskResult.output_file),\n              children: [/*#__PURE__*/_jsxDEV(Download, {\n                className: \"w-4 h-4 inline mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), \"Download Synchronized Subtitles\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 9\n        }, this), \" */}\", taskResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: '15px',\n              color: '#333'\n            },\n            children: [taskResult.success ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-6 h-6 text-green-500 inline mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              className: \"w-6 h-6 text-red-500 inline mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), \"Synchronization Result\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-message ${taskResult.success ? 'status-success' : 'status-error'}`,\n            children: taskResult.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), taskResult.success && taskResult.output_file && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-header\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-title\",\n                children: [\"\\uD83D\\uDCC4 \", taskResult.output_file]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-details\",\n              children: [taskResult.processing_time && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Processing time: \", SubtitleSyncAPI.formatProcessingTime(taskResult.processing_time)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 21\n              }, this), taskResult.offset_applied && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Offset applied: \", taskResult.offset_applied.toFixed(2), \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: () => downloadFile(taskResult.output_file),\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  className: \"w-4 h-4 inline mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 21\n                }, this), \"Download Synchronized Subtitles\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => setShowPreview(!showPreview),\n                style: {\n                  background: '#9c27b0'\n                },\n                children: [showPreview ? /*#__PURE__*/_jsxDEV(EyeOff, {\n                  className: \"w-4 h-4 inline mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 36\n                }, this) : /*#__PURE__*/_jsxDEV(Eye, {\n                  className: \"w-4 h-4 inline mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 81\n                }, this), showPreview ? 'Hide Preview' : 'Show Preview']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), showPreview && (originalSubtitleContent || syncedSubtitleContent) && /*#__PURE__*/_jsxDEV(SubtitlePreview, {\n          originalContent: originalSubtitleContent,\n          syncedContent: syncedSubtitleContent,\n          onClose: () => setShowPreview(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jpf0grf48eID8k/DW9vmEyFQduY=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","Upload","Video","FileText","Download","Trash2","RefreshCw","CheckCircle","XCircle","Clock","Sidebar","Eye","EyeOff","SubtitleSyncAPI","FileManagerSidebar","SubtitlePreview","jsxDEV","_jsxDEV","Fragment","_Fragment","api","App","_s","videoFile","setVideoFile","subtitleFile","setSubtitleFile","uploadProgress","setUploadProgress","isUploading","setIsUploading","taskId","setTaskId","taskStatus","setTaskStatus","taskResult","setTaskResult","isProcessing","setIsProcessing","message","setMessage","messageType","setMessageType","files","setFiles","upload_files","output_files","showSidebar","setShowSidebar","showPreview","setShowPreview","originalSubtitleContent","setOriginalSubtitleContent","syncedSubtitleContent","setSyncedSubtitleContent","onDrop","acceptedFiles","forEach","file","extension","name","toLowerCase","split","pop","includes","showMessage","getRootProps","getInputProps","isDragActive","accept","multiple","msg","type","setTimeout","readSubtitleFile","Promise","resolve","reject","reader","FileReader","onload","e","target","result","onerror","readAsText","loadSubtitleContent","filename","response","fetch","content","text","error","console","uploadFiles","originalContent","progress","loadFileList","_error$response","_error$response$data","data","detail","startSynchronization","startSync","task_id","waitForCompletion","status","finalResult","getTaskResult","success","output_file","syncedContent","_error$response2","_error$response2$data","downloadFile","deleteFile","fileType","fileList","listFiles","clearFiles","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","useEffect","children","onClick","isOpen","onClose","onRefresh","onDownload","onDelete","style","marginBottom","color","formatFileSize","size","width","disabled","background","marginLeft","processing_time","formatProcessingTime","offset_applied","toFixed","_c","$RefreshReg$"],"sources":["D:/38029/Subtitle Sync/UI/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Upload, Video, FileText, Download, Trash2, RefreshCw, CheckCircle, XCircle, Clock, Sidebar, Eye, EyeOff } from 'lucide-react';\r\nimport SubtitleSyncAPI from './api';\r\nimport FileManagerSidebar from './components/FileManagerSidebar';\r\nimport SubtitlePreview from './components/SubtitlePreview';\r\n\r\nconst api = new SubtitleSyncAPI();\r\n\r\nfunction App() {\r\n  const [videoFile, setVideoFile] = useState(null);\r\n  const [subtitleFile, setSubtitleFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [taskId, setTaskId] = useState(null);\r\n  const [taskStatus, setTaskStatus] = useState(null);\r\n  const [taskResult, setTaskResult] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [files, setFiles] = useState({ upload_files: [], output_files: [] });\r\n  const [showSidebar, setShowSidebar] = useState(false);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [originalSubtitleContent, setOriginalSubtitleContent] = useState('');\r\n  const [syncedSubtitleContent, setSyncedSubtitleContent] = useState('');\r\n\r\n  // Handle file drop\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const extension = file.name.toLowerCase().split('.').pop();\r\n      \r\n      if (['mp4', 'avi', 'mov', 'mkv', 'wmv', 'flv', 'webm'].includes(extension)) {\r\n        setVideoFile(file);\r\n        showMessage(`Video file selected: ${file.name}`, 'success');\r\n      } else if (['srt', 'vtt'].includes(extension)) {\r\n        setSubtitleFile(file);\r\n        showMessage(`Subtitle file selected: ${file.name}`, 'success');\r\n      } else {\r\n        showMessage(`Unsupported file type: ${file.name}`, 'error');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'video/*': ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv', '.webm'],\r\n      'text/*': ['.srt', '.vtt']\r\n    },\r\n    multiple: true\r\n  });\r\n\r\n  const showMessage = (msg, type) => {\r\n    setMessage(msg);\r\n    setMessageType(type);\r\n    setTimeout(() => {\r\n      setMessage('');\r\n      setMessageType('');\r\n    }, 5000);\r\n  };\r\n\r\n  const readSubtitleFile = async (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => resolve(e.target.result);\r\n      reader.onerror = reject;\r\n      reader.readAsText(file);\r\n    });\r\n  };\r\n\r\n  const loadSubtitleContent = async (filename) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/download/${filename}`);\r\n      const content = await response.text();\r\n      return content;\r\n    } catch (error) {\r\n      console.error('Error loading subtitle content:', error);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    if (!videoFile || !subtitleFile) {\r\n      showMessage('Please select both video and subtitle files', 'error');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      // Read original subtitle content\r\n      const originalContent = await readSubtitleFile(subtitleFile);\r\n      setOriginalSubtitleContent(originalContent);\r\n\r\n      const result = await api.uploadFiles(\r\n        videoFile,\r\n        subtitleFile,\r\n        (progress) => setUploadProgress(progress)\r\n      );\r\n      \r\n      showMessage('Files uploaded successfully!', 'success');\r\n      loadFileList();\r\n    } catch (error) {\r\n      showMessage(`Upload failed: ${error.response?.data?.detail || error.message}`, 'error');\r\n    } finally {\r\n      setIsUploading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const startSynchronization = async () => {\r\n    if (!videoFile || !subtitleFile) {\r\n      showMessage('Please upload files first', 'error');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    setTaskStatus(null);\r\n    setTaskResult(null);\r\n\r\n    try {\r\n      const result = await api.startSync(videoFile.name, subtitleFile.name);\r\n      setTaskId(result.task_id);\r\n      showMessage('Synchronization started!', 'info');\r\n\r\n      // Poll for status updates\r\n      await api.waitForCompletion(\r\n        result.task_id,\r\n        (status) => {\r\n          setTaskStatus(status);\r\n        },\r\n        2000\r\n      );\r\n\r\n      // Get final result\r\n      const finalResult = await api.getTaskResult(result.task_id);\r\n      setTaskResult(finalResult);\r\n      \r\n      if (finalResult.success) {\r\n        showMessage('Synchronization completed successfully!', 'success');\r\n        \r\n        // Load synced subtitle content if available\r\n        if (finalResult.output_file) {\r\n          const syncedContent = await loadSubtitleContent(finalResult.output_file);\r\n          setSyncedSubtitleContent(syncedContent);\r\n          setShowPreview(true); // Automatically show preview after sync\r\n        }\r\n        \r\n        loadFileList();\r\n      } else {\r\n        showMessage(`Synchronization failed: ${finalResult.message}`, 'error');\r\n      }\r\n    } catch (error) {\r\n      showMessage(`Synchronization failed: ${error.response?.data?.detail || error.message}`, 'error');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (filename) => {\r\n    try {\r\n      await api.downloadFile(filename);\r\n      showMessage(`Downloaded: ${filename}`, 'success');\r\n    } catch (error) {\r\n      showMessage(`Download failed: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const deleteFile = async (filename, fileType) => {\r\n    try {\r\n      await api.deleteFile(filename, fileType);\r\n      showMessage(`Deleted: ${filename}`, 'success');\r\n      loadFileList();\r\n    } catch (error) {\r\n      showMessage(`Delete failed: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const loadFileList = async () => {\r\n    try {\r\n      const fileList = await api.listFiles();\r\n      setFiles(fileList);\r\n    } catch (error) {\r\n      console.error('Failed to load file list:', error);\r\n    }\r\n  };\r\n\r\n  const clearFiles = () => {\r\n    setVideoFile(null);\r\n    setSubtitleFile(null);\r\n    setTaskId(null);\r\n    setTaskStatus(null);\r\n    setTaskResult(null);\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\r\n      case 'failed':\r\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\r\n      case 'processing':\r\n        return <RefreshCw className=\"w-5 h-5 text-blue-500 animate-spin\" />;\r\n      default:\r\n        return <Clock className=\"w-5 h-5 text-yellow-500\" />;\r\n    }\r\n  };\r\n\r\n  // Load file list on component mount\r\n  React.useEffect(() => {\r\n    loadFileList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* Sidebar Toggle Button */}\r\n      <button \r\n        className=\"sidebar-toggle\"\r\n        onClick={() => setShowSidebar(!showSidebar)}\r\n      >\r\n        <Sidebar className=\"w-5 h-5\" />\r\n        File Manager\r\n      </button>\r\n\r\n      {/* File Manager Sidebar */}\r\n      <FileManagerSidebar \r\n        isOpen={showSidebar}\r\n        onClose={() => setShowSidebar(false)}\r\n        files={files}\r\n        onRefresh={loadFileList}\r\n        onDownload={downloadFile}\r\n        onDelete={deleteFile}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <div className={`main-content ${showSidebar ? 'with-sidebar' : ''}`}>\r\n        <div className=\"container\">\r\n      {/* Header */}\r\n      <div className=\"header\">\r\n        <h1>🎬 Subtitle Synchronizer</h1>\r\n        <p>Automatically sync subtitle files with video audio tracks</p>\r\n      </div>\r\n\r\n      {/* File Upload Section */}\r\n      <div className=\"card\">\r\n        <h2 style={{ marginBottom: '20px', color: '#333' }}>Upload Files</h2>\r\n        \r\n        <div \r\n          {...getRootProps()} \r\n          className={`upload-area ${isDragActive ? 'dragover' : ''}`}\r\n        >\r\n          <input {...getInputProps()} />\r\n          <div className=\"upload-icon\">\r\n            <Upload />\r\n          </div>\r\n          <div className=\"upload-text\">\r\n            {isDragActive ? 'Drop files here...' : 'Drag & drop files here, or click to select'}\r\n          </div>\r\n          <div className=\"upload-subtext\">\r\n            Supports: MP4, AVI, MOV, MKV (video) • SRT, VTT (subtitles)\r\n          </div>\r\n        </div>\r\n\r\n        {/* Selected Files Display */}\r\n        {(videoFile || subtitleFile) && (\r\n          <div className=\"file-info\">\r\n            <h4>Selected Files</h4>\r\n            <div className=\"file-details\">\r\n              {videoFile && (\r\n                <div>\r\n                  <Video className=\"w-4 h-4 inline mr-2\" />\r\n                  <strong>Video:</strong> {videoFile.name}\r\n                  <br />\r\n                  <small>Size: {SubtitleSyncAPI.formatFileSize(videoFile.size)}</small>\r\n                </div>\r\n              )}\r\n              {subtitleFile && (\r\n                <div>\r\n                  <FileText className=\"w-4 h-4 inline mr-2\" />\r\n                  <strong>Subtitle:</strong> {subtitleFile.name}\r\n                  <br />\r\n                  <small>Size: {SubtitleSyncAPI.formatFileSize(subtitleFile.size)}</small>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Upload Progress */}\r\n        {isUploading && (\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\" \r\n                style={{ width: `${uploadProgress}%` }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"progress-text\">\r\n              Uploading... {uploadProgress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"file-actions\">\r\n          <button \r\n            className=\"btn\" \r\n            onClick={uploadFiles}\r\n            disabled={!videoFile || !subtitleFile || isUploading}\r\n          >\r\n            {isUploading ? 'Uploading...' : 'Upload Files'}\r\n          </button>\r\n          \r\n          <button \r\n            className=\"btn btn-secondary\" \r\n            onClick={startSynchronization}\r\n            disabled={!videoFile || !subtitleFile || isProcessing || isUploading}\r\n          >\r\n            {isProcessing ? (\r\n              <>\r\n                <span className=\"loading-spinner\"></span>\r\n                Processing...\r\n              </>\r\n            ) : (\r\n              'Start Synchronization'\r\n            )}\r\n          </button>\r\n\r\n          <button \r\n            className=\"btn\" \r\n            onClick={clearFiles}\r\n            style={{ background: '#ff5722' }}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Messages */}\r\n      {message && (\r\n        <div className={`status-message status-${messageType}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {/* Processing Status */}\r\n      {taskStatus && (\r\n        <div className=\"card\">\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>\r\n            {getStatusIcon(taskStatus.status)}\r\n            <span style={{ marginLeft: '10px' }}>Processing Status</span>\r\n          </h3>\r\n          \r\n          <div className=\"status-message status-info\">\r\n            <strong>Status:</strong> {taskStatus.status}<br />\r\n            <strong>Message:</strong> {taskStatus.message}\r\n          </div>\r\n\r\n          {taskStatus.progress !== null && (\r\n            <div className=\"progress-container\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\" \r\n                  style={{ width: `${taskStatus.progress}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"progress-text\">\r\n                Progress: {taskStatus.progress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n{/* \r\n      {/* Results */}\r\n      {taskResult && (\r\n        <div className=\"card\">\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>\r\n            {taskResult.success ? (\r\n              <CheckCircle className=\"w-6 h-6 text-green-500 inline mr-2\" />\r\n            ) : (\r\n              <XCircle className=\"w-6 h-6 text-red-500 inline mr-2\" />\r\n            )}\r\n            Synchronization Result\r\n          </h3>\r\n\r\n          <div className={`status-message ${taskResult.success ? 'status-success' : 'status-error'}`}>\r\n            {taskResult.message}\r\n          </div>\r\n\r\n          {taskResult.success && taskResult.output_file && (\r\n            <div className=\"result-item\">\r\n              <div className=\"result-header\">\r\n                <div className=\"result-title\">\r\n                  📄 {taskResult.output_file}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"result-details\">\r\n                {taskResult.processing_time && (\r\n                  <div>Processing time: {SubtitleSyncAPI.formatProcessingTime(taskResult.processing_time)}</div>\r\n                )}\r\n                {taskResult.offset_applied && (\r\n                  <div>Offset applied: {taskResult.offset_applied.toFixed(2)}s</div>\r\n                )}\r\n              </div>\r\n\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => downloadFile(taskResult.output_file)}\r\n              >\r\n                <Download className=\"w-4 h-4 inline mr-2\" />\r\n                Download Synchronized Subtitles\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )} */}\r\n\r\n        {/* Results */}\r\n        {taskResult && (\r\n          <div className=\"card\">\r\n            <h3 style={{ marginBottom: '15px', color: '#333' }}>\r\n              {taskResult.success ? (\r\n                <CheckCircle className=\"w-6 h-6 text-green-500 inline mr-2\" />\r\n              ) : (\r\n                <XCircle className=\"w-6 h-6 text-red-500 inline mr-2\" />\r\n              )}\r\n              Synchronization Result\r\n            </h3>\r\n\r\n            <div className={`status-message ${taskResult.success ? 'status-success' : 'status-error'}`}>\r\n              {taskResult.message}\r\n            </div>\r\n\r\n            {taskResult.success && taskResult.output_file && (\r\n              <div className=\"result-item\">\r\n                <div className=\"result-header\">\r\n                  <div className=\"result-title\">\r\n                    📄 {taskResult.output_file}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"result-details\">\r\n                  {taskResult.processing_time && (\r\n                    <div>Processing time: {SubtitleSyncAPI.formatProcessingTime(taskResult.processing_time)}</div>\r\n                  )}\r\n                  {taskResult.offset_applied && (\r\n                    <div>Offset applied: {taskResult.offset_applied.toFixed(2)}s</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"file-actions\">\r\n                  <button \r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => downloadFile(taskResult.output_file)}\r\n                  >\r\n                    <Download className=\"w-4 h-4 inline mr-2\" />\r\n                    Download Synchronized Subtitles\r\n                  </button>\r\n                  \r\n                  <button \r\n                    className=\"btn\"\r\n                    onClick={() => setShowPreview(!showPreview)}\r\n                    style={{ background: '#9c27b0' }}\r\n                  >\r\n                    {showPreview ? <EyeOff className=\"w-4 h-4 inline mr-2\" /> : <Eye className=\"w-4 h-4 inline mr-2\" />}\r\n                    {showPreview ? 'Hide Preview' : 'Show Preview'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Subtitle Preview */}\r\n        {showPreview && (originalSubtitleContent || syncedSubtitleContent) && (\r\n          <SubtitlePreview \r\n            originalContent={originalSubtitleContent}\r\n            syncedContent={syncedSubtitleContent}\r\n            onClose={() => setShowPreview(false)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\38029\\\\Subtitle Sync\\\\UI\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Upload, Video, FileText, Download, Trash2, RefreshCw, CheckCircle, XCircle, Clock, Sidebar, Eye, EyeOff } from 'lucide-react';\nimport SubtitleSyncAPI from './api';\nimport FileManagerSidebar from './components/FileManagerSidebar';\nimport SubtitlePreview from './components/SubtitlePreview';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = new SubtitleSyncAPI();\nfunction App() {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [subtitleFile, setSubtitleFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [taskId, setTaskId] = useState(null);\n  const [taskStatus, setTaskStatus] = useState(null);\n  const [taskResult, setTaskResult] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [files, setFiles] = useState({\n    upload_files: [],\n    output_files: []\n  });\n\n  // Handle file drop\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const extension = file.name.toLowerCase().split('.').pop();\n      if (['mp4', 'avi', 'mov', 'mkv', 'wmv', 'flv', 'webm'].includes(extension)) {\n        setVideoFile(file);\n        showMessage(`Video file selected: ${file.name}`, 'success');\n      } else if (['srt', 'vtt'].includes(extension)) {\n        setSubtitleFile(file);\n        showMessage(`Subtitle file selected: ${file.name}`, 'success');\n      } else {\n        showMessage(`Unsupported file type: ${file.name}`, 'error');\n      }\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'video/*': ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv', '.webm'],\n      'text/*': ['.srt', '.vtt']\n    },\n    multiple: true\n  });\n  const showMessage = (msg, type) => {\n    setMessage(msg);\n    setMessageType(type);\n    setTimeout(() => {\n      setMessage('');\n      setMessageType('');\n    }, 5000);\n  };\n  const uploadFiles = async () => {\n    if (!videoFile || !subtitleFile) {\n      showMessage('Please select both video and subtitle files', 'error');\n      return;\n    }\n    setIsUploading(true);\n    setUploadProgress(0);\n    try {\n      const result = await api.uploadFiles(videoFile, subtitleFile, progress => setUploadProgress(progress));\n      showMessage('Files uploaded successfully!', 'success');\n      loadFileList();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      showMessage(`Upload failed: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`, 'error');\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const startSynchronization = async () => {\n    if (!videoFile || !subtitleFile) {\n      showMessage('Please upload files first', 'error');\n      return;\n    }\n    setIsProcessing(true);\n    setTaskStatus(null);\n    setTaskResult(null);\n    try {\n      const result = await api.startSync(videoFile.name, subtitleFile.name);\n      setTaskId(result.task_id);\n      showMessage('Synchronization started!', 'info');\n\n      // Poll for status updates\n      await api.waitForCompletion(result.task_id, status => {\n        setTaskStatus(status);\n      }, 2000);\n\n      // Get final result\n      const finalResult = await api.getTaskResult(result.task_id);\n      setTaskResult(finalResult);\n      if (finalResult.success) {\n        showMessage('Synchronization completed successfully!', 'success');\n        loadFileList();\n      } else {\n        showMessage(`Synchronization failed: ${finalResult.message}`, 'error');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      showMessage(`Synchronization failed: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message}`, 'error');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const downloadFile = async filename => {\n    try {\n      await api.downloadFile(filename);\n      showMessage(`Downloaded: ${filename}`, 'success');\n    } catch (error) {\n      showMessage(`Download failed: ${error.message}`, 'error');\n    }\n  };\n  const deleteFile = async (filename, fileType) => {\n    try {\n      await api.deleteFile(filename, fileType);\n      showMessage(`Deleted: ${filename}`, 'success');\n      loadFileList();\n    } catch (error) {\n      showMessage(`Delete failed: ${error.message}`, 'error');\n    }\n  };\n  const loadFileList = async () => {\n    try {\n      const fileList = await api.listFiles();\n      setFiles(fileList);\n    } catch (error) {\n      console.error('Failed to load file list:', error);\n    }\n  };\n  const clearFiles = () => {\n    setVideoFile(null);\n    setSubtitleFile(null);\n    setTaskId(null);\n    setTaskStatus(null);\n    setTaskResult(null);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-5 h-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 16\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-5 h-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 16\n        }, this);\n      case 'processing':\n        return /*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"w-5 h-5 text-blue-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-5 h-5 text-yellow-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Load file list on component mount\n  React.useEffect(() => {\n    loadFileList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFAC Subtitle Synchronizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Automatically sync subtitle files with video audio tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '20px',\n          color: '#333'\n        },\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        className: `upload-area ${isDragActive ? 'dragover' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-icon\",\n          children: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-text\",\n          children: isDragActive ? 'Drop files here...' : 'Drag & drop files here, or click to select'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-subtext\",\n          children: \"Supports: MP4, AVI, MOV, MKV (video) \\u2022 SRT, VTT (subtitles)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), (videoFile || subtitleFile) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Selected Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-details\",\n          children: [videoFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Video, {\n              className: \"w-4 h-4 inline mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Video:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), \" \", videoFile.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Size: \", SubtitleSyncAPI.formatFileSize(videoFile.size)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), subtitleFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              className: \"w-4 h-4 inline mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Subtitle:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), \" \", subtitleFile.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Size: \", SubtitleSyncAPI.formatFileSize(subtitleFile.size)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: [\"Uploading... \", uploadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: uploadFiles,\n          disabled: !videoFile || !subtitleFile || isUploading,\n          children: isUploading ? 'Uploading...' : 'Upload Files'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: startSynchronization,\n          disabled: !videoFile || !subtitleFile || isProcessing || isUploading,\n          children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), \"Processing...\"]\n          }, void 0, true) : 'Start Synchronization'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: clearFiles,\n          style: {\n            background: '#ff5722'\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-message status-${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), taskStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '15px',\n          color: '#333'\n        },\n        children: [getStatusIcon(taskStatus.status), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Processing Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message status-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), \" \", taskStatus.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), \" \", taskStatus.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), taskStatus.progress !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${taskStatus.progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: [\"Progress: \", taskStatus.progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), taskResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '15px',\n          color: '#333'\n        },\n        children: [taskResult.success ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-6 h-6 text-green-500 inline mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-6 h-6 text-red-500 inline mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this), \"Synchronization Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-message ${taskResult.success ? 'status-success' : 'status-error'}`,\n        children: taskResult.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), taskResult.success && taskResult.output_file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-title\",\n            children: [\"\\uD83D\\uDCC4 \", taskResult.output_file]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-details\",\n          children: [taskResult.processing_time && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Processing time: \", SubtitleSyncAPI.formatProcessingTime(taskResult.processing_time)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 19\n          }, this), taskResult.offset_applied && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Offset applied: \", taskResult.offset_applied.toFixed(2), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => downloadFile(taskResult.output_file),\n          children: [/*#__PURE__*/_jsxDEV(Download, {\n            className: \"w-4 h-4 inline mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), \"Download Synchronized Subtitles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '15px',\n          color: '#333'\n        },\n        children: \"File Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: loadFileList,\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n          className: \"w-4 h-4 inline mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), \"Refresh File List\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"files-grid\",\n        children: [files.upload_files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: '15px',\n              color: '#333'\n            },\n            children: \"Uploaded Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), files.upload_files.map(filename => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => deleteFile(filename, 'upload'),\n              style: {\n                background: '#ff5722',\n                padding: '5px 10px',\n                fontSize: '0.8em'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                className: \"w-3 h-3 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this), \"Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this)]\n          }, filename, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), files.output_files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: '15px',\n              color: '#333'\n            },\n            children: \"Output Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this), files.output_files.map(filename => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary\",\n                onClick: () => downloadFile(filename),\n                style: {\n                  padding: '5px 10px',\n                  fontSize: '0.8em'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  className: \"w-3 h-3 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this), \"Download\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => deleteFile(filename, 'output'),\n                style: {\n                  background: '#ff5722',\n                  padding: '5px 10px',\n                  fontSize: '0.8em'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                  className: \"w-3 h-3 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 23\n                }, this), \"Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this)]\n          }, filename, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FXVzkMwwh+N+2aAF0nuL/EMw1sk=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","Upload","Video","FileText","Download","Trash2","RefreshCw","CheckCircle","XCircle","Clock","Sidebar","Eye","EyeOff","SubtitleSyncAPI","FileManagerSidebar","SubtitlePreview","jsxDEV","_jsxDEV","Fragment","_Fragment","api","App","_s","videoFile","setVideoFile","subtitleFile","setSubtitleFile","uploadProgress","setUploadProgress","isUploading","setIsUploading","taskId","setTaskId","taskStatus","setTaskStatus","taskResult","setTaskResult","isProcessing","setIsProcessing","message","setMessage","messageType","setMessageType","files","setFiles","upload_files","output_files","onDrop","acceptedFiles","forEach","file","extension","name","toLowerCase","split","pop","includes","showMessage","getRootProps","getInputProps","isDragActive","accept","multiple","msg","type","setTimeout","uploadFiles","result","progress","loadFileList","error","_error$response","_error$response$data","response","data","detail","startSynchronization","startSync","task_id","waitForCompletion","status","finalResult","getTaskResult","success","_error$response2","_error$response2$data","downloadFile","filename","deleteFile","fileType","fileList","listFiles","console","clearFiles","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","useEffect","children","style","marginBottom","color","formatFileSize","size","width","onClick","disabled","background","marginLeft","output_file","processing_time","formatProcessingTime","offset_applied","toFixed","length","map","padding","fontSize","_c","$RefreshReg$"],"sources":["D:/38029/Subtitle Sync/UI/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Upload, Video, FileText, Download, Trash2, RefreshCw, CheckCircle, XCircle, Clock, Sidebar, Eye, EyeOff } from 'lucide-react';\r\nimport SubtitleSyncAPI from './api';\r\nimport FileManagerSidebar from './components/FileManagerSidebar';\r\nimport SubtitlePreview from './components/SubtitlePreview';\r\n\r\nconst api = new SubtitleSyncAPI();\r\n\r\nfunction App() {\r\n  const [videoFile, setVideoFile] = useState(null);\r\n  const [subtitleFile, setSubtitleFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [taskId, setTaskId] = useState(null);\r\n  const [taskStatus, setTaskStatus] = useState(null);\r\n  const [taskResult, setTaskResult] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [files, setFiles] = useState({ upload_files: [], output_files: [] });\r\n\r\n  // Handle file drop\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const extension = file.name.toLowerCase().split('.').pop();\r\n      \r\n      if (['mp4', 'avi', 'mov', 'mkv', 'wmv', 'flv', 'webm'].includes(extension)) {\r\n        setVideoFile(file);\r\n        showMessage(`Video file selected: ${file.name}`, 'success');\r\n      } else if (['srt', 'vtt'].includes(extension)) {\r\n        setSubtitleFile(file);\r\n        showMessage(`Subtitle file selected: ${file.name}`, 'success');\r\n      } else {\r\n        showMessage(`Unsupported file type: ${file.name}`, 'error');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'video/*': ['.mp4', '.avi', '.mov', '.mkv', '.wmv', '.flv', '.webm'],\r\n      'text/*': ['.srt', '.vtt']\r\n    },\r\n    multiple: true\r\n  });\r\n\r\n  const showMessage = (msg, type) => {\r\n    setMessage(msg);\r\n    setMessageType(type);\r\n    setTimeout(() => {\r\n      setMessage('');\r\n      setMessageType('');\r\n    }, 5000);\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    if (!videoFile || !subtitleFile) {\r\n      showMessage('Please select both video and subtitle files', 'error');\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    setUploadProgress(0);\r\n\r\n    try {\r\n      const result = await api.uploadFiles(\r\n        videoFile,\r\n        subtitleFile,\r\n        (progress) => setUploadProgress(progress)\r\n      );\r\n      \r\n      showMessage('Files uploaded successfully!', 'success');\r\n      loadFileList();\r\n    } catch (error) {\r\n      showMessage(`Upload failed: ${error.response?.data?.detail || error.message}`, 'error');\r\n    } finally {\r\n      setIsUploading(false);\r\n      setUploadProgress(0);\r\n    }\r\n  };\r\n\r\n  const startSynchronization = async () => {\r\n    if (!videoFile || !subtitleFile) {\r\n      showMessage('Please upload files first', 'error');\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n    setTaskStatus(null);\r\n    setTaskResult(null);\r\n\r\n    try {\r\n      const result = await api.startSync(videoFile.name, subtitleFile.name);\r\n      setTaskId(result.task_id);\r\n      showMessage('Synchronization started!', 'info');\r\n\r\n      // Poll for status updates\r\n      await api.waitForCompletion(\r\n        result.task_id,\r\n        (status) => {\r\n          setTaskStatus(status);\r\n        },\r\n        2000\r\n      );\r\n\r\n      // Get final result\r\n      const finalResult = await api.getTaskResult(result.task_id);\r\n      setTaskResult(finalResult);\r\n      \r\n      if (finalResult.success) {\r\n        showMessage('Synchronization completed successfully!', 'success');\r\n        loadFileList();\r\n      } else {\r\n        showMessage(`Synchronization failed: ${finalResult.message}`, 'error');\r\n      }\r\n    } catch (error) {\r\n      showMessage(`Synchronization failed: ${error.response?.data?.detail || error.message}`, 'error');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (filename) => {\r\n    try {\r\n      await api.downloadFile(filename);\r\n      showMessage(`Downloaded: ${filename}`, 'success');\r\n    } catch (error) {\r\n      showMessage(`Download failed: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const deleteFile = async (filename, fileType) => {\r\n    try {\r\n      await api.deleteFile(filename, fileType);\r\n      showMessage(`Deleted: ${filename}`, 'success');\r\n      loadFileList();\r\n    } catch (error) {\r\n      showMessage(`Delete failed: ${error.message}`, 'error');\r\n    }\r\n  };\r\n\r\n  const loadFileList = async () => {\r\n    try {\r\n      const fileList = await api.listFiles();\r\n      setFiles(fileList);\r\n    } catch (error) {\r\n      console.error('Failed to load file list:', error);\r\n    }\r\n  };\r\n\r\n  const clearFiles = () => {\r\n    setVideoFile(null);\r\n    setSubtitleFile(null);\r\n    setTaskId(null);\r\n    setTaskStatus(null);\r\n    setTaskResult(null);\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\r\n      case 'failed':\r\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\r\n      case 'processing':\r\n        return <RefreshCw className=\"w-5 h-5 text-blue-500 animate-spin\" />;\r\n      default:\r\n        return <Clock className=\"w-5 h-5 text-yellow-500\" />;\r\n    }\r\n  };\r\n\r\n  // Load file list on component mount\r\n  React.useEffect(() => {\r\n    loadFileList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Header */}\r\n      <div className=\"header\">\r\n        <h1>🎬 Subtitle Synchronizer</h1>\r\n        <p>Automatically sync subtitle files with video audio tracks</p>\r\n      </div>\r\n\r\n      {/* File Upload Section */}\r\n      <div className=\"card\">\r\n        <h2 style={{ marginBottom: '20px', color: '#333' }}>Upload Files</h2>\r\n        \r\n        <div \r\n          {...getRootProps()} \r\n          className={`upload-area ${isDragActive ? 'dragover' : ''}`}\r\n        >\r\n          <input {...getInputProps()} />\r\n          <div className=\"upload-icon\">\r\n            <Upload />\r\n          </div>\r\n          <div className=\"upload-text\">\r\n            {isDragActive ? 'Drop files here...' : 'Drag & drop files here, or click to select'}\r\n          </div>\r\n          <div className=\"upload-subtext\">\r\n            Supports: MP4, AVI, MOV, MKV (video) • SRT, VTT (subtitles)\r\n          </div>\r\n        </div>\r\n\r\n        {/* Selected Files Display */}\r\n        {(videoFile || subtitleFile) && (\r\n          <div className=\"file-info\">\r\n            <h4>Selected Files</h4>\r\n            <div className=\"file-details\">\r\n              {videoFile && (\r\n                <div>\r\n                  <Video className=\"w-4 h-4 inline mr-2\" />\r\n                  <strong>Video:</strong> {videoFile.name}\r\n                  <br />\r\n                  <small>Size: {SubtitleSyncAPI.formatFileSize(videoFile.size)}</small>\r\n                </div>\r\n              )}\r\n              {subtitleFile && (\r\n                <div>\r\n                  <FileText className=\"w-4 h-4 inline mr-2\" />\r\n                  <strong>Subtitle:</strong> {subtitleFile.name}\r\n                  <br />\r\n                  <small>Size: {SubtitleSyncAPI.formatFileSize(subtitleFile.size)}</small>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Upload Progress */}\r\n        {isUploading && (\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\" \r\n                style={{ width: `${uploadProgress}%` }}\r\n              ></div>\r\n            </div>\r\n            <div className=\"progress-text\">\r\n              Uploading... {uploadProgress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"file-actions\">\r\n          <button \r\n            className=\"btn\" \r\n            onClick={uploadFiles}\r\n            disabled={!videoFile || !subtitleFile || isUploading}\r\n          >\r\n            {isUploading ? 'Uploading...' : 'Upload Files'}\r\n          </button>\r\n          \r\n          <button \r\n            className=\"btn btn-secondary\" \r\n            onClick={startSynchronization}\r\n            disabled={!videoFile || !subtitleFile || isProcessing || isUploading}\r\n          >\r\n            {isProcessing ? (\r\n              <>\r\n                <span className=\"loading-spinner\"></span>\r\n                Processing...\r\n              </>\r\n            ) : (\r\n              'Start Synchronization'\r\n            )}\r\n          </button>\r\n\r\n          <button \r\n            className=\"btn\" \r\n            onClick={clearFiles}\r\n            style={{ background: '#ff5722' }}\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status Messages */}\r\n      {message && (\r\n        <div className={`status-message status-${messageType}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {/* Processing Status */}\r\n      {taskStatus && (\r\n        <div className=\"card\">\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>\r\n            {getStatusIcon(taskStatus.status)}\r\n            <span style={{ marginLeft: '10px' }}>Processing Status</span>\r\n          </h3>\r\n          \r\n          <div className=\"status-message status-info\">\r\n            <strong>Status:</strong> {taskStatus.status}<br />\r\n            <strong>Message:</strong> {taskStatus.message}\r\n          </div>\r\n\r\n          {taskStatus.progress !== null && (\r\n            <div className=\"progress-container\">\r\n              <div className=\"progress-bar\">\r\n                <div \r\n                  className=\"progress-fill\" \r\n                  style={{ width: `${taskStatus.progress}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"progress-text\">\r\n                Progress: {taskStatus.progress}%\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Results */}\r\n      {taskResult && (\r\n        <div className=\"card\">\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>\r\n            {taskResult.success ? (\r\n              <CheckCircle className=\"w-6 h-6 text-green-500 inline mr-2\" />\r\n            ) : (\r\n              <XCircle className=\"w-6 h-6 text-red-500 inline mr-2\" />\r\n            )}\r\n            Synchronization Result\r\n          </h3>\r\n\r\n          <div className={`status-message ${taskResult.success ? 'status-success' : 'status-error'}`}>\r\n            {taskResult.message}\r\n          </div>\r\n\r\n          {taskResult.success && taskResult.output_file && (\r\n            <div className=\"result-item\">\r\n              <div className=\"result-header\">\r\n                <div className=\"result-title\">\r\n                  📄 {taskResult.output_file}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"result-details\">\r\n                {taskResult.processing_time && (\r\n                  <div>Processing time: {SubtitleSyncAPI.formatProcessingTime(taskResult.processing_time)}</div>\r\n                )}\r\n                {taskResult.offset_applied && (\r\n                  <div>Offset applied: {taskResult.offset_applied.toFixed(2)}s</div>\r\n                )}\r\n              </div>\r\n\r\n              <button \r\n                className=\"btn btn-secondary\"\r\n                onClick={() => downloadFile(taskResult.output_file)}\r\n              >\r\n                <Download className=\"w-4 h-4 inline mr-2\" />\r\n                Download Synchronized Subtitles\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* File Management */}\r\n      <div className=\"card\">\r\n        <h3 style={{ marginBottom: '15px', color: '#333' }}>File Management</h3>\r\n        \r\n        <button \r\n          className=\"btn\"\r\n          onClick={loadFileList}\r\n          style={{ marginBottom: '15px' }}\r\n        >\r\n          <RefreshCw className=\"w-4 h-4 inline mr-2\" />\r\n          Refresh File List\r\n        </button>\r\n\r\n        <div className=\"files-grid\">\r\n          {/* Upload Files */}\r\n          {files.upload_files.length > 0 && (\r\n            <div className=\"file-card\">\r\n              <h4 style={{ marginBottom: '15px', color: '#333' }}>Uploaded Files</h4>\r\n              {files.upload_files.map((filename) => (\r\n                <div key={filename} className=\"result-item\" style={{ marginBottom: '10px' }}>\r\n                  <div className=\"file-name\">{filename}</div>\r\n                  <button \r\n                    className=\"btn\"\r\n                    onClick={() => deleteFile(filename, 'upload')}\r\n                    style={{ background: '#ff5722', padding: '5px 10px', fontSize: '0.8em' }}\r\n                  >\r\n                    <Trash2 className=\"w-3 h-3 inline mr-1\" />\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Output Files */}\r\n          {files.output_files.length > 0 && (\r\n            <div className=\"file-card\">\r\n              <h4 style={{ marginBottom: '15px', color: '#333' }}>Output Files</h4>\r\n              {files.output_files.map((filename) => (\r\n                <div key={filename} className=\"result-item\" style={{ marginBottom: '10px' }}>\r\n                  <div className=\"file-name\">{filename}</div>\r\n                  <div className=\"file-actions\">\r\n                    <button \r\n                      className=\"btn btn-secondary\"\r\n                      onClick={() => downloadFile(filename)}\r\n                      style={{ padding: '5px 10px', fontSize: '0.8em' }}\r\n                    >\r\n                      <Download className=\"w-3 h-3 inline mr-1\" />\r\n                      Download\r\n                    </button>\r\n                    <button \r\n                      className=\"btn\"\r\n                      onClick={() => deleteFile(filename, 'output')}\r\n                      style={{ background: '#ff5722', padding: '5px 10px', fontSize: '0.8em' }}\r\n                    >\r\n                      <Trash2 className=\"w-3 h-3 inline mr-1\" />\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}